// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.ListIterator = {"":"Object;i,list",
 get$hasNext: function() {
  return $.lt(this.i, this.list.length);
},
 next$0: function() {
  var value, t1;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  value = this.list[this.i];
  t1 = this.i;
  if (typeof t1 !== 'number')
    return this.next$0$bailout0(1, t1, value);
  this.i = t1 + 1;
  return value;
},
 next$0$bailout0: function(state0, t1, value) {
  this.i = $.add(t1, 1);
  return value;
}
};

$$.StackTrace = {"":"Object;stack",
 toString$0: function() {
  var t1 = this.stack;
  return !(t1 == null) ? t1 : "";
}
};

$$.Closure = {"":"Object;",
 toString$0: function() {
  return "Closure";
},
 is$Function: true
};

$$.Null = {"":"Object;"
};

$$.CastErrorImplementation = {"":"Object;actualType,expectedType",
 toString$0: function() {
  return "CastError: Casting value of type " + $.S(this.actualType) + " to" + " incompatible type " + $.S(this.expectedType);
}
};

$$.ConstantMap = {"":"Object;length?,_jsObject,_lib0_keys?",
 containsKey$1: function(key) {
  if ($.eqB(key, "__proto__"))
    return false;
  return this._jsObject.hasOwnProperty(key);
},
 operator$index$1: function(key) {
  if (this.containsKey$1(key) !== true)
    return;
  return this._jsObject[key];
},
 forEach$1: function(f) {
  var t1 = this._lib0_keys;
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $.ConstantMap_forEach_anon(this, f));
},
 get$isEmpty: function() {
  return $.eq(this.length, 0);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _throwUnmodifiable$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot modify unmodifiable Map"));
},
 operator$indexSet$2: function(key, val) {
  return this._throwUnmodifiable$0();
},
 clear$0: function() {
  return this._throwUnmodifiable$0();
},
 is$Map: function() { return true; }
};

$$.MetaInfo = {"":"Object;_tag?,_tags,_set?"
};

$$.JSSyntaxRegExp = {"":"Object;_lib0_pattern,_multiLine,_ignoreCase",
 firstMatch$1: function(str) {
  var m, matchStart, t1, matchEnd;
  m = $.regExpExec(this, $.checkString(str));
  if (m == null)
    return;
  matchStart = m.index;
  t1 = $.index(m, 0);
  t1 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  matchEnd = matchStart + t1;
  return $._MatchImplementation$(this.get$pattern(), str, matchStart, matchEnd, m);
},
 hasMatch$1: function(str) {
  return $.regExpTest(this, $.checkString(str));
},
 allMatches$1: function(str) {
  $.checkString(str);
  return $._AllMatchesIterable$(this, str);
},
 get$pattern: function() {
  return this._lib0_pattern;
},
 get$multiLine: function() {
  return this._multiLine;
},
 get$ignoreCase: function() {
  return this._ignoreCase;
},
 is$JSSyntaxRegExp: true
};

$$._MatchImplementation = {"":"Object;pattern?,str,start,end,_groups",
 group$1: function(index) {
  return $.index(this._groups, index);
},
 operator$index$1: function(index) {
  return $.index(this._groups, index);
}
};

$$._AllMatchesIterable = {"":"Object;_re,_str",
 iterator$0: function() {
  return $._AllMatchesIterator$(this._re, this._str);
}
};

$$._AllMatchesIterator = {"":"Object;_re,_str,_lib0_next=,_done",
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  var next = this._lib0_next;
  this._lib0_next = null;
  return next;
},
 get$hasNext: function() {
  if (this._done)
    return false;
  else if (!(this._lib0_next == null))
    return true;
  this._lib0_next = this._re.firstMatch$1(this._str);
  if (this._lib0_next == null) {
    this._done = true;
    return false;
  } else
    return true;
}
};

$$.StringMatch = {"":"Object;start,str,pattern?",
 operator$index$1: function(g) {
  return this.group$1(g);
},
 group$1: function(group_) {
  if (!$.eqB(group_, 0))
    throw $.$$throw($.RangeError$value(group_));
  return this.pattern;
}
};

$$.bool = {"":"Object;",
 is$bool: true
};

$$.NullThrownError = {"":"Object;",
 toString$0: function() {
  return "Throw of null.";
}
};

$$.ArgumentError = {"":"Object;message",
 toString$0: function() {
  var t1 = this.message;
  if (!(t1 == null))
    return "Illegal argument(s): " + $.S(t1);
  return "Illegal argument(s)";
}
};

$$.RangeError = {"":"ArgumentError;message",
 toString$0: function() {
  return "RangeError: " + $.S(this.message);
}
};

$$.NoSuchMethodError = {"":"Object;_receiver,_memberName,_arguments,_namedArguments,_existingArgumentNames",
 toString$0: function() {
  var t1, t2, t3, t4, t5, actualParameters, i, formalParameters;
  t1 = {};
  t1.sb_1 = $.StringBuffer_StringBuffer("");
  t1.i_2 = 0;
  t2 = this._arguments;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(1, t1, t2);
  for (; $.ltB(t1.i_2, t2.length); t1.i_2 = $.add(t1.i_2, 1)) {
    if ($.gtB(t1.i_2, 0)) {
      t3 = t1.sb_1;
      $.getInterceptor$JSArray(t3).add$1(t3, ", ");
    }
    t3 = t1.sb_1;
    t4 = $.getInterceptor$JSArray(t3);
    t5 = t1.i_2;
    if (t5 !== (t5 | 0))
      throw $.iae(t5);
    if (t5 < 0 || t5 >= t2.length)
      throw $.ioore(t5);
    t4.add$1(t3, $.Error_safeToString(t2[t5]));
  }
  t2 = this._namedArguments;
  if (!(t2 == null))
    $.getInterceptor$JSArray(t2).forEach$1(t2, new $.NoSuchMethodError_toString_anon(t1));
  t2 = this._existingArgumentNames;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(2, t1, t2);
  t3 = t1.sb_1;
  actualParameters = $.getInterceptor(t3).toString$0(t3);
  t1.sb_1 = $.StringBuffer_StringBuffer("");
  for (i = 0; i < t2.length; ++i) {
    if (i > 0) {
      t3 = t1.sb_1;
      $.getInterceptor$JSArray(t3).add$1(t3, ", ");
    }
    t3 = t1.sb_1;
    t4 = $.getInterceptor$JSArray(t3);
    if (i >= t2.length)
      throw $.ioore(i);
    t4.add$1(t3, t2[i]);
  }
  t1 = t1.sb_1;
  formalParameters = $.getInterceptor(t1).toString$0(t1);
  t1 = this._memberName;
  return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t1) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t1) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t1) + "(" + $.S(formalParameters) + ")";
},
 toString$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t2 = env1;
      t1 = env0;
      break;
    case 2:
      t2 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = {};
      t1.sb_1 = $.StringBuffer_StringBuffer("");
      t1.i_2 = 0;
      t2 = this._arguments;
    case 1:
      state0 = 0;
      if (!(t2 == null))
        for (; $.ltB(t1.i_2, $.getInterceptor$JSStringJSArray(t2).get$length(t2)); t1.i_2 = $.add(t1.i_2, 1)) {
          if ($.gtB(t1.i_2, 0)) {
            t3 = t1.sb_1;
            $.getInterceptor$JSArray(t3).add$1(t3, ", ");
          }
          t3 = t1.sb_1;
          $.getInterceptor$JSArray(t3).add$1(t3, $.Error_safeToString($.index(t2, t1.i_2)));
        }
      t2 = this._namedArguments;
      if (!(t2 == null))
        $.getInterceptor$JSArray(t2).forEach$1(t2, new $.NoSuchMethodError_toString_anon(t1));
      t2 = this._existingArgumentNames;
    case 2:
      var t1, t2, t3, actualParameters, i, formalParameters;
      state0 = 0;
      if (t2 == null)
        return "NoSuchMethodError : method not found: '" + $.S(this._memberName) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Arguments: [" + $.S(t1.sb_1) + "]";
      else {
        t3 = t1.sb_1;
        actualParameters = $.getInterceptor(t3).toString$0(t3);
        t1.sb_1 = $.StringBuffer_StringBuffer("");
        for (i = 0; $.ltB(i, $.getInterceptor$JSStringJSArray(t2).get$length(t2)); ++i) {
          if (i > 0) {
            t3 = t1.sb_1;
            $.getInterceptor$JSArray(t3).add$1(t3, ", ");
          }
          t3 = t1.sb_1;
          $.getInterceptor$JSArray(t3).add$1(t3, $.index(t2, i));
        }
        t1 = t1.sb_1;
        formalParameters = $.getInterceptor(t1).toString$0(t1);
        t1 = this._memberName;
        return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t1) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t1) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t1) + "(" + $.S(formalParameters) + ")";
      }
  }
}
};

$$.UnsupportedError = {"":"Object;message?",
 toString$0: function() {
  return "Unsupported operation: " + $.S(this.get$message());
}
};

$$.UnimplementedError = {"":"Object;message?",
 toString$0: function() {
  var t1 = this.message;
  return !(t1 == null) ? "UnimplementedError: " + $.S(t1) : "UnimplementedError";
}
};

$$.StateError = {"":"Object;message",
 toString$0: function() {
  return "Bad state: " + this.message;
}
};

$$.StackOverflowError = {"":"Object;",
 toString$0: function() {
  return "Stack Overflow";
}
};

$$._ExceptionImplementation = {"":"Object;message",
 toString$0: function() {
  var t1 = this.message;
  if (t1 == null)
    return "Exception";
  return "Exception: " + $.S(t1);
}
};

$$.IllegalJSRegExpException = {"":"Object;_pattern,_errmsg",
 toString$0: function() {
  return "IllegalJSRegExpException: '" + $.S(this._pattern) + "' '" + this._errmsg + "'";
}
};

$$.RuntimeError = {"":"Object;message",
 toString$0: function() {
  return "RuntimeError: " + this.message;
}
};

$$._HashMapImpl = {"":"Object;_keys?,_values,_loadLimit,_numberOfEntries,_numberOfDeleted",
 _probeForAdding$1: function(key) {
  var t1, hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.ArgumentError$(null));
  t1 = $.getInterceptor(key).get$hashCode(key);
  if (t1 !== (t1 | 0))
    return this._probeForAdding$1$bailout(1, key, t1);
  hash = (t1 & this._keys.length - 1) >>> 0;
  for (numberOfProbes = 1, insertionIndex = -1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && existingKey === $.CTC4)
      insertionIndex = hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
    if (hash !== (hash | 0))
      return this._probeForAdding$1$bailout(2, key, insertionIndex, hash, numberOfProbes0);
  }
},
 _probeForAdding$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      t1 = env1;
      key = env0;
      break;
    case 2:
      numberOfProbes0 = env3;
      hash = env2;
      insertionIndex = env1;
      key = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (key == null)
        throw $.$$throw($.ArgumentError$(null));
      t1 = $.getInterceptor(key).get$hashCode(key);
    case 1:
      state0 = 0;
      hash = $.and(t1, this._keys.length - 1);
      numberOfProbes = 1;
      insertionIndex = -1;
    case 2:
      var t1, key, hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!true)
                break L0;
              t1 = this._keys;
              if (hash !== (hash | 0))
                throw $.iae(hash);
              if (hash < 0 || hash >= t1.length)
                throw $.ioore(hash);
              existingKey = t1[hash];
              if (existingKey == null) {
                if (insertionIndex < 0)
                  return hash;
                return insertionIndex;
              } else if ($.eqB(existingKey, key))
                return hash;
              else if (insertionIndex < 0 && existingKey === $.CTC4)
                insertionIndex = hash;
              numberOfProbes0 = numberOfProbes + 1;
              hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
            case 2:
              state0 = 0;
              numberOfProbes = numberOfProbes0;
          }
  }
},
 _probeForLookup$1: function(key) {
  var hash, numberOfProbes, t1, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.ArgumentError$(null));
  hash = $.and($.getInterceptor(key).get$hashCode(key), this._keys.length - 1);
  if (hash !== (hash | 0))
    return this._probeForLookup$1$bailout(1, key, hash);
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _probeForLookup$1$bailout: function(state0, key, hash) {
  var numberOfProbes, t1, existingKey, numberOfProbes0;
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _ensureCapacity$0: function() {
  var newNumberOfEntries, capacity, numberOfFreeOrDeleted, t1;
  newNumberOfEntries = $.add(this._numberOfEntries, 1);
  if ($.geB(newNumberOfEntries, this._loadLimit)) {
    this._grow$1(this._keys.length * 2);
    return;
  }
  capacity = this._keys.length;
  if (typeof newNumberOfEntries !== 'number')
    throw $.iae(newNumberOfEntries);
  numberOfFreeOrDeleted = capacity - newNumberOfEntries;
  t1 = this._numberOfDeleted;
  if (t1 > numberOfFreeOrDeleted - t1)
    this._grow$1(capacity);
},
 _grow$1: function(newCapacity) {
  var capacity, oldKeys, oldValues, i, key, value, newIndex, t1;
  capacity = this._keys.length;
  this._loadLimit = $.tdiv($.mul(newCapacity, 3), 4);
  oldKeys = this._keys;
  oldValues = this._values;
  this._keys = $.List_List(newCapacity);
  this._values = $.List_List(newCapacity);
  for (i = 0; i < capacity; ++i) {
    if (i >= oldKeys.length)
      throw $.ioore(i);
    key = oldKeys[i];
    if (key == null || key === $.CTC4)
      continue;
    if (i >= oldValues.length)
      throw $.ioore(i);
    value = oldValues[i];
    newIndex = this._probeForAdding$1(key);
    t1 = this._keys;
    if (newIndex !== (newIndex | 0))
      throw $.iae(newIndex);
    if (newIndex < 0 || newIndex >= t1.length)
      throw $.ioore(newIndex);
    t1[newIndex] = key;
    t1 = this._values;
    if (newIndex >= t1.length)
      throw $.ioore(newIndex);
    t1[newIndex] = value;
  }
  this._numberOfDeleted = 0;
},
 clear$0: function() {
  var t1, length$, t2, t3, i;
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  t1 = this._keys;
  length$ = t1.length;
  for (t2 = this._values, t3 = t2.length, i = 0; i < length$; ++i) {
    t1[i] = null;
    if (i >= t3)
      throw $.ioore(i);
    t2[i] = null;
  }
},
 operator$indexSet$2: function(key, value) {
  var index, t1;
  this._ensureCapacity$0();
  index = this._probeForAdding$1(key);
  t1 = this._keys;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  t1 = t1[index];
  if (t1 == null || t1 === $.CTC4)
    this._numberOfEntries = $.add(this._numberOfEntries, 1);
  t1 = this._keys;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = key;
  t1 = this._values;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = value;
},
 operator$index$1: function(key) {
  var index, t1;
  index = this._probeForLookup$1(key);
  if ($.ltB(index, 0))
    return;
  t1 = this._values;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 get$isEmpty: function() {
  return $.eq(this._numberOfEntries, 0);
},
 get$length: function() {
  return this._numberOfEntries;
},
 forEach$1: function(f) {
  var length$, i, t1, key;
  length$ = this._keys.length;
  for (i = 0; i < length$; ++i) {
    t1 = this._keys;
    if (i >= t1.length)
      throw $.ioore(i);
    key = t1[i];
    if (!(key == null) && !(key === $.CTC4)) {
      t1 = this._values;
      if (i >= t1.length)
        throw $.ioore(i);
      f.call$2(key, t1[i]);
    }
  }
},
 containsKey$1: function(key) {
  return !$.eqB(this._probeForLookup$1(key), -1);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _HashMapImpl$0: function() {
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  this._loadLimit = $._HashMapImpl__computeLoadLimit(8);
  this._keys = $.List_List(8);
  this._values = $.List_List(8);
},
 is$Map: function() { return true; }
};

$$._DeletedKeySentinel = {"":"Object;"
};

$$._KeyValuePair = {"":"Object;key?,value="
};

$$._LinkedHashMapImpl = {"":"Object;_list,_map",
 operator$indexSet$2: function(key, value) {
  if (this._map.containsKey$1(key) === true)
    $.index(this._map, key).get$element().set$value(value);
  else {
    this._list.addLast$1($._KeyValuePair$(key, value));
    $.indexSet(this._map, key, this._list.lastEntry$0());
  }
},
 operator$index$1: function(key) {
  var entry = $.index(this._map, key);
  if (entry == null)
    return;
  return entry.get$element().get$value();
},
 forEach$1: function(f) {
  this._list.forEach$1(new $._LinkedHashMapImpl_forEach_anon(f));
},
 containsKey$1: function(key) {
  return this._map.containsKey$1(key);
},
 get$length: function() {
  var t1 = this._map;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 get$isEmpty: function() {
  return $.eq(this.get$length(), 0);
},
 clear$0: function() {
  var t1 = this._map;
  $.getInterceptor$JSArray(t1).clear$0(t1);
  this._list.clear$0();
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _LinkedHashMapImpl$0: function() {
  this._map = $.HashMap_HashMap();
  this._list = $.DoubleLinkedQueue$();
},
 is$Map: function() { return true; }
};

$$.Object = {"":";",
 operator$eq$1: function(other) {
  return this === other;
},
 get$hashCode: function() {
  return $.Primitives_objectHashCode(this);
},
 toString$0: function() {
  return $.Primitives_objectToString(this);
}
};

$$.DoubleLinkedQueueEntry = {"":"Object;_previous=,_next=,_element?",
 _link$2: function(p, n) {
  this._next = n;
  this._previous = p;
  p.set$_next(this);
  n.set$_previous(this);
},
 prepend$1: function(e) {
  $.DoubleLinkedQueueEntry$(e)._link$2(this._previous, this);
},
 remove$0: function() {
  var t1 = this._next;
  this._previous.set$_next(t1);
  t1 = this._previous;
  this._next.set$_previous(t1);
  this._next = null;
  this._previous = null;
  return this._element;
},
 _asNonSentinelEntry$0: function() {
  return this;
},
 previousEntry$0: function() {
  return this._previous._asNonSentinelEntry$0();
},
 get$element: function() {
  return this._element;
},
 DoubleLinkedQueueEntry$1: function(e) {
  this._element = e;
}
};

$$._DoubleLinkedQueueEntrySentinel = {"":"DoubleLinkedQueueEntry;_previous,_next,_element",
 remove$0: function() {
  throw $.$$throw($.StateError$("Empty queue"));
},
 _asNonSentinelEntry$0: function() {
  return;
},
 get$element: function() {
  throw $.$$throw($.StateError$("Empty queue"));
},
 _DoubleLinkedQueueEntrySentinel$0: function() {
  this._link$2(this, this);
}
};

$$.DoubleLinkedQueue = {"":"Object;_sentinel",
 addLast$1: function(value) {
  this._sentinel.prepend$1(value);
},
 add$1: function(value) {
  this._sentinel.prepend$1(value);
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(collection).iterator$0(collection); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    this._sentinel.prepend$1(t2);
  }
},
 removeLast$0: function() {
  return this._sentinel._previous.remove$0();
},
 get$last: function() {
  return this._sentinel._previous.get$element();
},
 lastEntry$0: function() {
  return this._sentinel.previousEntry$0();
},
 get$length: function() {
  var t1 = {};
  t1.counter_1 = 0;
  this.forEach$1(new $.DoubleLinkedQueue_length_anon(t1));
  return t1.counter_1;
},
 get$isEmpty: function() {
  var t1 = this._sentinel;
  return t1._next === t1;
},
 clear$0: function() {
  var t1 = this._sentinel;
  t1._next = t1;
  t1 = this._sentinel;
  t1._previous = t1;
},
 forEach$1: function(f) {
  var entry, nextEntry;
  entry = this._sentinel._next;
  for (; !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    f.call$1(entry.get$_element());
  }
},
 map$1: function(f) {
  var other, entry, t1, nextEntry;
  other = $.Queue_Queue();
  entry = this._sentinel._next;
  for (t1 = $.getInterceptor$JSArray(other); !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    t1.addLast$1(other, f.call$1(entry.get$_element()));
  }
  return other;
},
 filter$1: function(f) {
  var other, entry, t1, nextEntry;
  other = $.Queue_Queue();
  entry = this._sentinel._next;
  for (t1 = $.getInterceptor$JSArray(other); !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    if (f.call$1(entry.get$_element()) === true)
      t1.addLast$1(other, entry.get$_element());
  }
  return other;
},
 iterator$0: function() {
  return $._DoubleLinkedQueueIterator$(this._sentinel);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 DoubleLinkedQueue$0: function() {
  this._sentinel = $._DoubleLinkedQueueEntrySentinel$();
},
 is$Collection: function() { return true; }
};

$$._DoubleLinkedQueueIterator = {"":"Object;_sentinel,_currentEntry",
 get$hasNext: function() {
  var t1, t2;
  t1 = this._currentEntry.get$_next();
  t2 = this._sentinel;
  return !(t1 == null ? t2 == null : t1 === t2);
},
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  this._currentEntry = this._currentEntry.get$_next();
  return this._currentEntry.get$element();
},
 _DoubleLinkedQueueIterator$1: function(_sentinel) {
  this._currentEntry = this._sentinel;
}
};

$$._HashSetImpl = {"":"Object;_backingMap?",
 clear$0: function() {
  this._backingMap.clear$0();
},
 add$1: function(value) {
  this._backingMap.operator$indexSet$2(value, value);
},
 contains$1: function(value) {
  return this._backingMap.containsKey$1(value);
},
 addAll$1: function(collection) {
  $.getInterceptor$JSArray(collection).forEach$1(collection, new $._HashSetImpl_addAll_anon(this));
},
 forEach$1: function(f) {
  this._backingMap.forEach$1(new $._HashSetImpl_forEach_anon(f));
},
 map$1: function(f) {
  var result = $.Set_Set();
  this._backingMap.forEach$1(new $._HashSetImpl_map_anon(f, result));
  return result;
},
 filter$1: function(f) {
  var result = $.Set_Set();
  this._backingMap.forEach$1(new $._HashSetImpl_filter_anon(result, f));
  return result;
},
 get$isEmpty: function() {
  var t1 = this._backingMap;
  return $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1);
},
 get$length: function() {
  var t1 = this._backingMap;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 iterator$0: function() {
  return $._HashSetIterator$(this);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 _HashSetImpl$0: function() {
  this._backingMap = $._HashMapImpl$();
},
 is$Collection: function() { return true; }
};

$$._HashSetIterator = {"":"Object;_entries,_nextValidIndex",
 get$hasNext: function() {
  var t1, t2, t3;
  t1 = this._nextValidIndex;
  t2 = this._entries;
  t3 = $.getInterceptor$JSStringJSArray(t2);
  if ($.geB(t1, t3.get$length(t2)))
    return false;
  if ($.index(t2, this._nextValidIndex) === $.CTC4)
    this._advance$0();
  return $.lt(this._nextValidIndex, t3.get$length(t2));
},
 next$0: function() {
  var t1, t3, res;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  t1 = this._entries;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.next$0$bailout2(1, t1);
  t3 = this._nextValidIndex;
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  res = t1[t3];
  this._advance$0();
  return res;
},
 next$0$bailout2: function(state0, t1) {
  var res = $.index(t1, this._nextValidIndex);
  this._advance$0();
  return res;
},
 _advance$0: function() {
  var t1, length$, t2, entry;
  t1 = this._entries;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._advance$0$bailout(1, t1);
  length$ = t1.length;
  do {
    t2 = this._nextValidIndex + 1;
    this._nextValidIndex = t2;
    if (t2 >= length$)
      break;
    t2 = this._nextValidIndex;
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    entry = t1[t2];
  } while (entry == null || entry === $.CTC4);
},
 _advance$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      length$ = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._entries;
    case 1:
      state0 = 0;
      length$ = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
    case 2:
      var t1, length$, t2, entry;
      state0 = 0;
      do {
        t2 = this._nextValidIndex + 1;
        this._nextValidIndex = t2;
        if ($.geB(t2, length$))
          break;
        entry = $.index(t1, this._nextValidIndex);
      } while (entry == null || entry === $.CTC4);
  }
},
 _HashSetIterator$1: function(set_) {
  this._advance$0();
}
};

$$._StringBufferImpl = {"":"Object;_buffer,_length",
 get$length: function() {
  return this._length;
},
 get$isEmpty: function() {
  return $.eq(this._length, 0);
},
 add$1: function(obj) {
  var str, t1, t3;
  str = $.getInterceptor(obj).toString$0(obj);
  if (str == null || $.getInterceptor$JSStringJSArray(str).get$isEmpty(str) === true)
    return this;
  t1 = this._buffer;
  $.getInterceptor$JSArray(t1).add$1(t1, str);
  t1 = this._length;
  if (typeof t1 !== 'number')
    return this.add$1$bailout(1, str, t1);
  t3 = $.getInterceptor$JSStringJSArray(str).get$length(str);
  if (typeof t3 !== 'number')
    return this.add$1$bailout(2, t3, t1);
  this._length = t1 + t3;
  return this;
},
 add$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env1;
      str = env0;
      break;
    case 2:
      t1 = env1;
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      str = $.getInterceptor(obj).toString$0(obj);
      if (str == null || $.getInterceptor$JSStringJSArray(str).get$isEmpty(str) === true)
        return this;
      t1 = this._buffer;
      $.getInterceptor$JSArray(t1).add$1(t1, str);
      t1 = this._length;
    case 1:
      state0 = 0;
      t3 = $.getInterceptor$JSStringJSArray(str).get$length(str);
    case 2:
      var str, t1, t3;
      state0 = 0;
      this._length = $.add(t1, t3);
      return this;
  }
},
 addAll$1: function(objects) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(objects).iterator$0(objects); t1.get$hasNext() === true;)
    this.add$1(t1.next$0());
  return this;
},
 clear$0: function() {
  this._buffer = $.List_List(null);
  this._length = 0;
  return this;
},
 toString$0: function() {
  var t1, result;
  t1 = this._buffer;
  if ($.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 0))
    return "";
  t1 = this._buffer;
  if ($.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 1))
    return $.index(this._buffer, 0);
  result = $.stringJoinUnchecked($.Strings__toJsStringArray(this._buffer), "");
  t1 = this._buffer;
  $.getInterceptor$JSArray(t1).clear$0(t1);
  t1 = this._buffer;
  $.getInterceptor$JSArray(t1).add$1(t1, result);
  return result;
},
 _StringBufferImpl$1: function(content$) {
  this.clear$0();
  this.add$1(content$);
}
};

$$.ObjectInterceptor = {"":"Object;",
 iterator$0: function(receiver) {
  return receiver.iterator$0();
},
 add$1: function(receiver, a0) {
  return receiver.add$1(a0);
},
 charCodeAt$1: function(receiver, a0) {
  return receiver.charCodeAt$1(a0);
},
 toString$0: function(receiver) {
  return receiver.toString$0();
},
 substring$1: function(receiver, a0) {
  return receiver.substring$1(a0);
},
 replaceAll$2: function(receiver, a0, a1) {
  return receiver.replaceAll$2(a0, a1);
},
 ceil$0: function(receiver) {
  return receiver.ceil$0();
},
 set$length: function(receiver, value) {
  return receiver.set$length(value);
},
 substring$2: function(receiver, a0, a1) {
  return receiver.substring$2(a0, a1);
},
 map$1: function(receiver, a0) {
  return receiver.map$1(a0);
},
 get$last: function(receiver) {
  return receiver.get$last();
},
 endsWith$1: function(receiver, a0) {
  return receiver.endsWith$1(a0);
},
 removeRange$2: function(receiver, a0, a1) {
  return receiver.removeRange$2(a0, a1);
},
 toLowerCase$0: function(receiver) {
  return receiver.toLowerCase$0();
},
 get$length: function(receiver) {
  return receiver.get$length();
},
 forEach$1: function(receiver, a0) {
  return receiver.forEach$1(a0);
},
 contains$2: function(receiver, a0, a1) {
  return receiver.contains$2(a0, a1);
},
 get$isEmpty: function(receiver) {
  return receiver.get$isEmpty();
},
 addLast$1: function(receiver, a0) {
  return receiver.addLast$1(a0);
},
 indexOf$2: function(receiver, a0, a1) {
  return receiver.indexOf$2(a0, a1);
},
 toUpperCase$0: function(receiver) {
  return receiver.toUpperCase$0();
},
 truncate$0: function(receiver) {
  return receiver.truncate$0();
},
 get$hashCode: function(receiver) {
  return receiver.get$hashCode();
},
 indexOf$1: function(receiver, a0) {
  return receiver.indexOf$1(a0);
},
 getRange$2: function(receiver, a0, a1) {
  return receiver.getRange$2(a0, a1);
},
 clear$0: function(receiver) {
  return receiver.clear$0();
},
 filter$1: function(receiver, a0) {
  return receiver.filter$1(a0);
},
 trim$0: function(receiver) {
  return receiver.trim$0();
},
 split$1: function(receiver, a0) {
  return receiver.split$1(a0);
},
 floor$0: function(receiver) {
  return receiver.floor$0();
},
 allMatches$1: function(receiver, a0) {
  return receiver.allMatches$1(a0);
},
 removeLast$0: function(receiver) {
  return receiver.removeLast$0();
},
 addAll$1: function(receiver, a0) {
  return receiver.addAll$1(a0);
},
 contains$1: function(receiver, a0) {
  return receiver.contains$1(a0);
}
};

$$.JSFunction = {"":"Object;",
 toString$0: function(receiver) {
  return "Closure";
},
 is$Function: true
};

$$.JSBool = {"":"Object;",
 toString$0: function(receiver) {
  return String(receiver);
},
 get$hashCode: function(receiver) {
  return receiver ? 519018 : 218159;
},
 is$bool: true
};

$$.JSNull = {"":"Object;",
 toString$0: function(receiver) {
  return "null";
},
 get$hashCode: function(receiver) {
  return 0;
}
};

$$.JSArray = {"":"Object;",
 add$1: function(receiver, value) {
  $.checkGrowable(receiver, "add");
  receiver.push(value);
},
 removeLast$0: function(receiver) {
  $.checkGrowable(receiver, "removeLast");
  if (receiver.length === 0)
    throw $.$$throw($.RangeError$value(-1));
  return receiver.pop();
},
 filter$1: function(receiver, f) {
  return $.Collections_filter(receiver, [], f);
},
 addAll$1: function(receiver, collection) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(collection).iterator$0(collection); t1.get$hasNext() === true;)
    $.CTC0.add$1(receiver, t1.next$0());
},
 addLast$1: function(receiver, value) {
  $.checkGrowable(receiver, "addLast");
  receiver.push(value);
},
 clear$0: function(receiver) {
  this.set$length(receiver, 0);
},
 forEach$1: function(receiver, f) {
  return $.Collections_forEach(receiver, f);
},
 map$1: function(receiver, f) {
  return $.Collections_map(receiver, [], f);
},
 getRange$2: function(receiver, start, length$) {
  var t1, end;
  if (0 === length$)
    return [];
  $.checkNull(start);
  $.checkNull(length$);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$))
    throw $.$$throw($.ArgumentError$(length$));
  t1 = length$ < 0;
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  end = start + length$;
  if (end > receiver.length)
    throw $.$$throw($.RangeError$value(length$));
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  return receiver.slice(start, end);
},
 get$last: function(receiver) {
  var t1, t2;
  t1 = receiver.length;
  t2 = t1 - 1;
  if (t2 < 0)
    throw $.ioore(t2);
  return receiver[t2];
},
 removeRange$2: function(receiver, start, length$) {
  var receiverLength, t1, t2;
  $.checkGrowable(receiver, "removeRange");
  if (length$ === 0)
    return;
  $.checkNull(start);
  $.checkNull(length$);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  receiverLength = receiver.length;
  if (start < 0 || start >= receiverLength)
    throw $.$$throw($.RangeError$value(start));
  t1 = start + length$;
  if (t1 > receiverLength)
    throw $.$$throw($.RangeError$value(t1));
  t2 = receiverLength - length$;
  $.Arrays_copy(receiver, t1, receiver, start, t2 - start);
  $.CTC0.set$length(receiver, t2);
},
 indexOf$2: function(receiver, element, start) {
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  return $.Arrays_indexOf(receiver, element, start, receiver.length);
},
 indexOf$1: function($receiver, element) {
  return this.indexOf$2($receiver, element, 0);
},
 contains$1: function(receiver, other) {
  var i;
  for (i = 0; i < receiver.length; ++i)
    if ($.eqB(other, receiver[i]))
      return true;
  return false;
},
 get$isEmpty: function(receiver) {
  return receiver.length === 0;
},
 toString$0: function(receiver) {
  return $.Collections_collectionToString(receiver);
},
 iterator$0: function(receiver) {
  return $.ListIterator$(receiver);
},
 get$hashCode: function(receiver) {
  return $.Primitives_objectHashCode(receiver);
},
 get$length: function(receiver) {
  return receiver.length;
},
 set$length: function(receiver, newLength) {
  if (!(typeof newLength === 'number' && Math.floor(newLength) === newLength))
    throw $.$$throw($.ArgumentError$(newLength));
  if (newLength < 0)
    throw $.$$throw($.RangeError$value(newLength));
  $.checkGrowable(receiver, "set length");
  receiver.length = newLength;
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.JSNumber = {"":"Object;",
 ceil$0: function(receiver) {
  return Math.ceil(receiver);
},
 floor$0: function(receiver) {
  return Math.floor(receiver);
},
 truncate$0: function(receiver) {
  return receiver < 0 ? this.ceil$0(receiver) : this.floor$0(receiver);
},
 toString$0: function(receiver) {
  if (receiver === 0 && (1 / receiver) < 0)
    return "-0.0";
  else
    return String(receiver);
},
 get$hashCode: function(receiver) {
  return receiver & 536870911;
}
};

$$.JSInt = {"":"JSNumber;"
};

$$.JSDouble = {"":"JSNumber;"
};

$$.JSString = {"":"Object;",
 charCodeAt$1: function(receiver, index) {
  if (index < 0)
    throw $.$$throw($.RangeError$value(index));
  if (index >= receiver.length)
    throw $.$$throw($.RangeError$value(index));
  return receiver.charCodeAt(index);
},
 allMatches$1: function(receiver, str) {
  $.checkString(str);
  return $.allMatchesInStringUnchecked(receiver, str);
},
 endsWith$1: function(receiver, other) {
  var otherLength, t1;
  $.checkString(other);
  otherLength = other.length;
  t1 = receiver.length;
  if (otherLength > t1)
    return false;
  return other === this.substring$1(receiver, t1 - otherLength);
},
 replaceAll$2: function(receiver, from, to) {
  $.checkString(to);
  return $.stringReplaceAllUnchecked(receiver, from, to);
},
 split$1: function(receiver, pattern) {
  $.checkNull(pattern);
  return receiver.split(pattern);
},
 substring$2: function(receiver, startIndex, endIndex) {
  $.checkNum(startIndex);
  if (endIndex == null)
    endIndex = receiver.length;
  $.checkNum(endIndex);
  if ($.ltB(startIndex, 0))
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(startIndex, endIndex))
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(endIndex, receiver.length))
    throw $.$$throw($.RangeError$value(endIndex));
  return receiver.substring(startIndex, endIndex);
},
 substring$1: function($receiver, startIndex) {
  return this.substring$2($receiver, startIndex, null);
},
 toLowerCase$0: function(receiver) {
  return receiver.toLowerCase();
},
 toUpperCase$0: function(receiver) {
  return receiver.toUpperCase();
},
 trim$0: function(receiver) {
  return receiver.trim();
},
 indexOf$2: function(receiver, other, start) {
  $.checkNull(other);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (!(typeof other === 'string'))
    throw $.$$throw($.ArgumentError$(other));
  if (start < 0)
    return -1;
  return receiver.indexOf(other, start);
},
 indexOf$1: function($receiver, other) {
  return this.indexOf$2($receiver, other, 0);
},
 contains$2: function(receiver, other, startIndex) {
  $.checkNull(other);
  return $.stringContainsUnchecked(receiver, other, startIndex);
},
 contains$1: function($receiver, other) {
  return this.contains$2($receiver, other, 0);
},
 get$isEmpty: function(receiver) {
  return receiver.length === 0;
},
 toString$0: function(receiver) {
  return receiver;
},
 get$hashCode: function(receiver) {
  var hash, i, hash0, hash1;
  for (hash = 0, i = 0; i < receiver.length; ++i, hash = hash1) {
    hash0 = 536870911 & hash + receiver.charCodeAt(i);
    hash1 = 536870911 & hash0 + ((524287 & hash0) << 10 >>> 0);
    hash1 = hash1 ^ (hash1 >> 6);
  }
  hash0 = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
  hash0 = hash0 ^ (hash0 >> 11);
  return 536870911 & hash0 + ((16383 & hash0) << 15 >>> 0);
},
 get$length: function(receiver) {
  return receiver.length;
},
 is$String: true
};

$$.BodyElementEvents = {"":"ElementEvents;_ptr"
};

$$.DocumentEvents = {"":"ElementEvents;_ptr"
};

$$._FrozenCssClassSet = {"":"CssClassSet;",
 writeClasses$1: function(s) {
  throw $.$$throw($.UnsupportedError$("frozen class set cannot be modified"));
},
 readClasses$0: function() {
  return $.Set_Set();
}
};

$$._ChildrenElementList = {"":"Object;_lib_element?,_childElements",
 _toList$0: function() {
  var t1, t3, output, len, i, t2;
  t1 = this._childElements;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._toList$0$bailout(1, t1);
  t3 = t1.length;
  output = $.List_List(t3);
  len = t1.length;
  i = 0;
  for (; i < len; ++i) {
    t2 = t1[i];
    if (i >= t3)
      throw $.ioore(i);
    output[i] = t2;
  }
  return output;
},
 _toList$0$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      output = env2;
      len = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._childElements;
    case 1:
      state0 = 0;
      t3 = $.getInterceptor$JSStringJSArray(t1);
      output = $.List_List(t3.get$length(t1));
      len = t3.get$length(t1);
    case 2:
      var t1, t3, output, len, i, t2;
      state0 = 0;
      i = 0;
      for (; $.ltB(i, len); ++i) {
        t2 = $.index(t1, i);
        if (i >= output.length)
          throw $.ioore(i);
        output[i] = t2;
      }
      return output;
  }
},
 contains$1: function(element) {
  var t1 = this._childElements;
  return $.getInterceptor$JSStringJSArray(t1).contains$1(t1, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = this._childElements, t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
},
 filter$1: function(f) {
  var output, t1, t2;
  output = [];
  t1 = new $._ChildrenElementList_filter_anon(f, output);
  for (t2 = this._childElements, t2 = $.getInterceptor$JSArray(t2).iterator$0(t2); t2.get$hasNext() === true;)
    t1.call$1(t2.next$0());
  return $._FrozenElementList$_wrap(output);
},
 map$1: function(f) {
  var out, t1;
  out = [];
  for (t1 = this.iterator$0(); t1.get$hasNext() === true;)
    out.push(f.call$1(t1.next$0()));
  return out;
},
 get$isEmpty: function() {
  return this._lib_element.firstElementChild == null;
},
 get$length: function() {
  var t1 = this._childElements;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 operator$index$1: function(index) {
  return $.index(this._childElements, index);
},
 operator$indexSet$2: function(index, value) {
  this._lib_element.$dom_replaceChild$2(value, $.index(this._childElements, index));
},
 set$length: function(newLength) {
  throw $.$$throw($.UnsupportedError$(""));
},
 add$1: function(value) {
  this._lib_element.$dom_appendChild$1(value);
  return value;
},
 addLast$1: function(value) {
  this._lib_element.$dom_appendChild$1(value);
  return value;
},
 iterator$0: function() {
  var t1 = this._toList$0();
  return $.getInterceptor$JSArray(t1).iterator$0(t1);
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(collection).iterator$0(collection), t2 = this._lib_element; t1.get$hasNext() === true;)
    t2.$dom_appendChild$1(t1.next$0());
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnimplementedError$(null));
},
 getRange$2: function(start, rangeLength) {
  return $._FrozenElementList$_wrap($.Lists_getRange(this, start, rangeLength, []));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 clear$0: function() {
  this._lib_element.textContent = "";
},
 removeLast$0: function() {
  var result = $.getInterceptor$JSArray(this).get$last(this);
  if (!(result == null))
    this._lib_element.$dom_removeChild$1(result);
  return result;
},
 get$last: function() {
  return this._lib_element.lastElementChild;
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._FrozenElementList = {"":"Object;_nodeList",
 contains$1: function(element) {
  var t1;
  for (t1 = this.iterator$0(); t1.get$hasNext() === true;)
    if ($.eqB(t1.next$0(), element))
      return true;
  return false;
},
 forEach$1: function(f) {
  var t1;
  for (t1 = this.iterator$0(); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
},
 map$1: function(f) {
  var out, t1;
  out = [];
  for (t1 = this.iterator$0(); t1.get$hasNext() === true;)
    out.push(f.call$1(t1.next$0()));
  return out;
},
 filter$1: function(f) {
  var out, t1, t2;
  out = [];
  for (t1 = this.iterator$0(); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (f.call$1(t2) === true)
      out.push(t2);
  }
  return out;
},
 get$isEmpty: function() {
  var t1 = this._nodeList;
  return $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1);
},
 get$length: function() {
  var t1 = this._nodeList;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 operator$index$1: function(index) {
  return $.index(this._nodeList, index);
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$(""));
},
 set$length: function(newLength) {
  var t1 = this._nodeList;
  $.getInterceptor$JSArray(t1).set$length(t1, newLength);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$(""));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$(""));
},
 iterator$0: function() {
  return $._FrozenElementListIterator$(this);
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$(""));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$(""));
},
 getRange$2: function(start, rangeLength) {
  var t1 = this._nodeList;
  return $._FrozenElementList$_wrap($.getInterceptor$JSArray(t1).getRange$2(t1, start, rangeLength));
},
 indexOf$2: function(element, start) {
  var t1 = this._nodeList;
  return $.getInterceptor$JSStringJSArray(t1).indexOf$2(t1, element, start);
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$(""));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$(""));
},
 get$last: function() {
  var t1 = this._nodeList;
  return $.getInterceptor$JSArray(t1).get$last(t1);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._FrozenElementListIterator = {"":"Object;_lib_list,_index",
 next$0: function() {
  var t1, t2;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  t1 = this._lib_list;
  t2 = this._index;
  if (typeof t2 !== 'number')
    return this.next$0$bailout1(1, t2, t1);
  this._index = t2 + 1;
  return t1.operator$index$1(t2);
},
 next$0$bailout1: function(state0, t2, t1) {
  this._index = $.add(t2, 1);
  return t1.operator$index$1(t2);
},
 get$hasNext: function() {
  var t1, t2;
  t1 = this._index;
  t2 = this._lib_list;
  return $.lt(t1, $.getInterceptor$JSStringJSArray(t2).get$length(t2));
}
};

$$._ElementCssClassSet = {"":"CssClassSet;_lib_element?",
 readClasses$0: function() {
  var s, classname, t1, t2, t3, trimmed;
  s = $.Set_Set();
  classname = this._lib_element.className;
  for (t1 = $.getInterceptor$JSString(classname).split$1(classname, " "), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1), t2 = $.getInterceptor$JSArray(s); t1.get$hasNext() === true;) {
    t3 = t1.next$0();
    trimmed = $.getInterceptor$JSString(t3).trim$0(t3);
    if ($.getInterceptor$JSStringJSArray(trimmed).get$isEmpty(trimmed) !== true)
      t2.add$1(s, trimmed);
  }
  return s;
},
 writeClasses$1: function(s) {
  var t1 = $.Strings_join($.List_List$from(s), " ");
  this._lib_element.className = t1;
}
};

$$.ElementEvents = {"":"Events;_ptr",
 get$change: function() {
  return this.operator$index$1("change");
},
 get$input: function() {
  return this.operator$index$1("input");
}
};

$$.Events = {"":"Object;_ptr",
 operator$index$1: function(type) {
  return $.EventListenerList$(this._ptr, type);
}
};

$$.EventListenerList = {"":"Object;_ptr,_type",
 add$2: function(listener, useCapture) {
  this._ptr.$dom_addEventListener$3(this._type, listener, useCapture);
  return this;
},
 add$1: function(listener) {
  return this.add$2(listener, false);
}
};

$$.FrameSetElementEvents = {"":"ElementEvents;_ptr"
};

$$.InputElementEvents = {"":"ElementEvents;_ptr"
};

$$.LocalWindowEvents = {"":"Events;_ptr",
 get$change: function() {
  return this.operator$index$1("change");
},
 get$input: function() {
  return this.operator$index$1("input");
}
};

$$.MediaElementEvents = {"":"ElementEvents;_ptr"
};

$$._ChildNodeListLazy = {"":"Object;_this",
 get$last: function() {
  return this._this.lastChild;
},
 add$1: function(value) {
  this._this.$dom_appendChild$1(value);
},
 addLast$1: function(value) {
  this._this.$dom_appendChild$1(value);
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(collection).iterator$0(collection), t2 = this._this; t1.get$hasNext() === true;)
    t2.$dom_appendChild$1(t1.next$0());
},
 removeLast$0: function() {
  var result = this.get$last();
  if (!(result == null))
    this._this.$dom_removeChild$1(result);
  return result;
},
 clear$0: function() {
  this._this.textContent = "";
},
 operator$indexSet$2: function(index, value) {
  this._this.$dom_replaceChild$2(value, this.operator$index$1(index));
},
 iterator$0: function() {
  var t1 = this._this.childNodes;
  return $.getInterceptor$JSArray(t1).iterator$0(t1);
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 get$length: function() {
  var t1 = this._this.childNodes;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot set length on immutable List."));
},
 operator$index$1: function(index) {
  return $.index(this._this.childNodes, index);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._AttributeMap = {"":"Object;_lib_element?",
 clear$0: function() {
  for (var t1 = this.get$keys(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;)
    this.remove$1(t1.next$0());
},
 forEach$1: function(f) {
  var t1, t2;
  for (t1 = this.get$keys(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    f.call$2(t2, this.operator$index$1(t2));
  }
},
 get$keys: function() {
  var attributes, keys, len, i;
  attributes = this._lib_element.attributes;
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.get$keys$bailout(1, attributes);
  keys = $.List_List(null);
  len = attributes.length;
  i = 0;
  for (; i < len; ++i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    if (this._matches$1(attributes[i]) === true) {
      if (i >= attributes.length)
        throw $.ioore(i);
      keys.push(attributes[i].get$$$dom_localName());
    }
  }
  return keys;
},
 get$keys$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      attributes = env0;
      break;
    case 2:
      keys = env2;
      len = env1;
      attributes = env0;
      break;
  }
  switch (state0) {
    case 0:
      attributes = this._lib_element.attributes;
    case 1:
      state0 = 0;
      keys = $.List_List(null);
      len = $.getInterceptor$JSStringJSArray(attributes).get$length(attributes);
    case 2:
      var attributes, keys, len, i;
      state0 = 0;
      i = 0;
      for (; $.ltB(i, len); ++i)
        if (this._matches$1($.index(attributes, i)) === true)
          keys.push($.index(attributes, i).get$$$dom_localName());
      return keys;
  }
},
 get$isEmpty: function() {
  return $.eq(this.get$length(), 0);
},
 is$Map: function() { return true; }
};

$$._ElementAttributeMap = {"":"_AttributeMap;_lib_element",
 containsKey$1: function(key) {
  return this._lib_element.$dom_hasAttribute$1(key);
},
 operator$index$1: function(key) {
  return this._lib_element.$dom_getAttribute$1(key);
},
 operator$indexSet$2: function(key, value) {
  this._lib_element.$dom_setAttribute$2(key, $.S(value));
},
 remove$1: function(key) {
  var t1, value;
  t1 = this._lib_element;
  value = t1.$dom_getAttribute$1(key);
  t1.$dom_removeAttribute$1(key);
  return value;
},
 get$length: function() {
  var t1 = this.get$keys();
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 _matches$1: function(node) {
  return node.get$$$dom_namespaceUri() == null;
}
};

$$.CssClassSet = {"":"Object;",
 toString$0: function() {
  return $.Strings_join($.List_List$from(this.readClasses$0()), " ");
},
 iterator$0: function() {
  var t1 = this.readClasses$0();
  return $.getInterceptor$JSArray(t1).iterator$0(t1);
},
 forEach$1: function(f) {
  var t1 = this.readClasses$0();
  $.getInterceptor$JSArray(t1).forEach$1(t1, f);
},
 map$1: function(f) {
  var t1 = this.readClasses$0();
  return $.getInterceptor$JSArray(t1).map$1(t1, f);
},
 filter$1: function(f) {
  var t1 = this.readClasses$0();
  return $.getInterceptor$JSArray(t1).filter$1(t1, f);
},
 get$isEmpty: function() {
  var t1 = this.readClasses$0();
  return $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1);
},
 get$length: function() {
  var t1 = this.readClasses$0();
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 contains$1: function(value) {
  var t1 = this.readClasses$0();
  return $.getInterceptor$JSStringJSArray(t1).contains$1(t1, value);
},
 add$1: function(value) {
  this._modify$1(new $.CssClassSet_add_anon(value));
},
 addAll$1: function(collection) {
  this._modify$1(new $.CssClassSet_addAll_anon(collection));
},
 clear$0: function() {
  this._modify$1(new $.CssClassSet_clear_anon());
},
 _modify$1: function(f) {
  var s = this.readClasses$0();
  f.call$1(s);
  this.writeClasses$1(s);
},
 is$Collection: function() { return true; }
};

$$.FixedSizeListIterator = {"":"_VariableSizeListIterator;_lib_length,_array,_pos",
 get$hasNext: function() {
  return $.gt(this._lib_length, this._pos);
}
};

$$._VariableSizeListIterator = {"":"Object;",
 get$hasNext: function() {
  var t1 = this._array;
  return $.gt($.getInterceptor$JSStringJSArray(t1).get$length(t1), this._pos);
},
 next$0: function() {
  var t1, t3;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  t1 = this._array;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.next$0$bailout(1, t1);
  t3 = this._pos;
  if (typeof t3 !== 'number')
    return this.next$0$bailout(2, t3, t1);
  this._pos = t3 + 1;
  if (t3 !== (t3 | 0))
    throw $.iae(t3);
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  return t1[t3];
},
 next$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env1;
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (this.get$hasNext() !== true)
        throw $.$$throw($.StateError$("No more elements"));
      t1 = this._array;
    case 1:
      state0 = 0;
      t3 = this._pos;
    case 2:
      var t1, t3;
      state0 = 0;
      this._pos = $.add(t3, 1);
      return $.index(t1, t3);
  }
}
};

$$.FilteredElementList = {"":"Object;_node,_childNodes",
 get$_filtered: function() {
  var t1 = this._childNodes;
  return $.List_List$from($.getInterceptor$JSArray(t1).filter$1(t1, new $.FilteredElementList__filtered_anon()));
},
 forEach$1: function(f) {
  var t1 = this.get$_filtered();
  $.getInterceptor$JSArray(t1).forEach$1(t1, f);
},
 operator$indexSet$2: function(index, value) {
  this.operator$index$1(index).replaceWith$1(value);
},
 set$length: function(newLength) {
  var len = $.getInterceptor$JSStringJSArray(this).get$length(this);
  if ($.geB(newLength, len))
    return;
  else if ($.ltB(newLength, 0))
    throw $.$$throw($.ArgumentError$("Invalid list length"));
  this.removeRange$2(newLength, $.sub(len, newLength));
},
 add$1: function(value) {
  var t1 = this._childNodes;
  $.getInterceptor$JSArray(t1).add$1(t1, value);
},
 get$add: function() { return new $.BoundClosure(this, 'add$1'); },
 addAll$1: function(collection) {
  $.getInterceptor$JSArray(collection).forEach$1(collection, this.get$add());
},
 addLast$1: function(value) {
  var t1 = this._childNodes;
  $.getInterceptor$JSArray(t1).add$1(t1, value);
},
 contains$1: function(element) {
  var t1, t2;
  if (typeof element === 'object' && element !== null && element.is$Element()) {
    t1 = this._childNodes;
    t2 = $.getInterceptor$JSStringJSArray(t1).contains$1(t1, element) === true;
    t1 = t2;
  } else
    t1 = false;
  return t1;
},
 removeRange$2: function(start, rangeLength) {
  var t1 = this.get$_filtered();
  t1 = $.getInterceptor$JSArray(t1).getRange$2(t1, start, rangeLength);
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $.FilteredElementList_removeRange_anon());
},
 clear$0: function() {
  var t1 = this._childNodes;
  $.getInterceptor$JSArray(t1).clear$0(t1);
},
 removeLast$0: function() {
  var result = $.getInterceptor$JSArray(this).get$last(this);
  if (!(result == null))
    result.remove$0();
  return result;
},
 map$1: function(f) {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSArray(t1).map$1(t1, f);
},
 filter$1: function(f) {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSArray(t1).filter$1(t1, f);
},
 get$isEmpty: function() {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1);
},
 get$length: function() {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 operator$index$1: function(index) {
  return $.index(this.get$_filtered(), index);
},
 iterator$0: function() {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSArray(t1).iterator$0(t1);
},
 getRange$2: function(start, rangeLength) {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSArray(t1).getRange$2(t1, start, rangeLength);
},
 indexOf$2: function(element, start) {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSStringJSArray(t1).indexOf$2(t1, element, start);
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 get$last: function() {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSArray(t1).get$last(t1);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._AttributeClassSet = {"":"CssClassSet;_lib1_element?",
 readClasses$0: function() {
  var classname, s, t1, t2, t3, trimmed;
  classname = $.index(this._lib1_element.get$attributes(), "class");
  s = $.Set_Set();
  if (classname == null)
    return s;
  for (t1 = $.getInterceptor$JSString(classname).split$1(classname, " "), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1), t2 = $.getInterceptor$JSArray(s); t1.get$hasNext() === true;) {
    t3 = t1.next$0();
    trimmed = $.getInterceptor$JSString(t3).trim$0(t3);
    if ($.getInterceptor$JSStringJSArray(trimmed).get$isEmpty(trimmed) !== true)
      t2.add$1(s, trimmed);
  }
  return s;
},
 writeClasses$1: function(s) {
  var list = $.List_List$from(s);
  $.indexSet(this._lib1_element.get$attributes(), "class", $.Strings_join(list, " "));
}
};

$$.WatchEvent = {"":"Object;oldValue,newValue?"
};

$$._Watcher = {"":"Object;debugName,_getter?,_callback,_lastValue",
 _getter$0: function() {
  return this._getter.call$0();
},
 _callback$1: function(arg0) {
  return this._callback.call$1(arg0);
},
 toString$0: function() {
  var t1 = this.debugName;
  return t1 == null ? "<unnamed>" : t1;
},
 compareAndNotify$0: function() {
  var currentValue, oldValue;
  currentValue = this._safeRead$0();
  if (this._compare$1(currentValue) === true) {
    oldValue = this._lastValue;
    this._update$1(currentValue);
    this._callback$1($.WatchEvent$(oldValue, currentValue));
    return true;
  }
  return false;
},
 _compare$1: function(currentValue) {
  return !$.eqB(this._lastValue, currentValue);
},
 _update$1: function(currentValue) {
  this._lastValue = currentValue;
},
 _safeRead$0: function(exception) {
  var t1, e, trace;
  try {
    t1 = this._getter$0();
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    trace = $.getTraceFromException(exception);
    $.print("error: evaluating " + $.S(this) + " watcher threw an exception (" + $.S(e) + ", " + $.S(trace) + ")");
  }

  return this._lastValue;
},
 _Watcher$3: function(_getter, _callback, debugName) {
  this._lastValue = this._getter$0();
}
};

$$._ListWatcher = {"":"_Watcher;debugName,_getter,_callback,_lastValue",
 _compare$1: function(currentValue) {
  var t1, i;
  if (typeof currentValue !== 'string' && (typeof currentValue !== 'object' || currentValue === null || currentValue.constructor !== Array && !currentValue.is$JavaScriptIndexingBehavior()))
    return this._compare$1$bailout(1, currentValue);
  t1 = this._lastValue;
  if (!$.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), currentValue.length))
    return true;
  for (i = 0; t1 = this._lastValue, $.ltB(i, $.getInterceptor$JSStringJSArray(t1).get$length(t1)); ++i) {
    t1 = $.index(this._lastValue, i);
    if (i >= currentValue.length)
      throw $.ioore(i);
    if (!$.eqB(t1, currentValue[i]))
      return true;
  }
  return false;
},
 _compare$1$bailout: function(state0, currentValue) {
  var t1, i;
  t1 = this._lastValue;
  if (!$.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), $.getInterceptor$JSStringJSArray(currentValue).get$length(currentValue)))
    return true;
  for (i = 0; t1 = this._lastValue, $.ltB(i, $.getInterceptor$JSStringJSArray(t1).get$length(t1)); ++i)
    if (!$.eqB($.index(this._lastValue, i), $.index(currentValue, i)))
      return true;
  return false;
},
 _update$1: function(currentValue) {
  this._lastValue = $.List_List$from(currentValue);
},
 _ListWatcher$3: function(getter, callback, debugName) {
  this._update$1(this._safeRead$0());
}
};

$$._AdtParsers = {"":"LanguageParsers;op,_commentStart,_commentEnd,_commentLine,_nestedComments,_identStart,_identLetter,_reservedNames,_caseSensitive,_reserved,_escapeCode,_digitToInt",
 get$module: function() {
  return $.xor($.add($.add($.add(this.get$whiteSpace(), this.get$def().get$many()), this.get$classDecl().get$many()), $.get$eof()), new $._AdtParsers_module_anon());
},
 get$def: function() {
  return $.xor($.add($.add($.add($.add($.index(this.get$reserved(), "data"), this.get$identifier()), this.angles$1(this.get$identifier().sepBy$1(this.get$comma())).orElse$1([])), this.symbol$1("=")), this.get$$constructor().sepBy$1(this.symbol$1("|"))), new $._AdtParsers_def_anon());
},
 get$$constructor: function() {
  return $.xor($.add(this.get$identifier(), this.parens$1(this.get$parameter().sepBy$1(this.get$comma()))), new $._AdtParsers_constructor_anon());
},
 get$parameter: function() {
  return $.xor($.add($.mod(this.typeAppl$0(), "type"), $.mod(this.get$identifier(), "parameter")), new $._AdtParsers_parameter_anon());
},
 typeAppl$0: function() {
  var t1, t3;
  t1 = this.get$identifier();
  if (t1 !== (t1 | 0))
    return this.typeAppl$0$bailout(1, t1);
  t3 = this.angles$1($.rec(this.get$typeAppl()).sepBy$1(this.get$comma())).orElse$1([]);
  if (t3 !== (t3 | 0))
    return this.typeAppl$0$bailout(2, t1, t3);
  t3 = t1 + t3;
  t1 = new $._AdtParsers_typeAppl_anon();
  if (t1 !== (t1 | 0))
    return this.typeAppl$0$bailout(3, t3, t1);
  return (t3 ^ t1) >>> 0;
},
 typeAppl$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t3 = env1;
      t1 = env0;
      break;
    case 3:
      t1 = env1;
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.get$identifier();
    case 1:
      state0 = 0;
      t3 = this.angles$1($.rec(this.get$typeAppl()).sepBy$1(this.get$comma())).orElse$1([]);
    case 2:
      state0 = 0;
      t3 = $.add(t1, t3);
      t1 = new $._AdtParsers_typeAppl_anon();
    case 3:
      var t1, t3;
      state0 = 0;
      return $.xor(t3, t1);
  }
},
 get$typeAppl: function() { return new $.BoundClosure0(this, 'typeAppl$0'); },
 get$classDecl: function() {
  return $.xor($.add($.add($.index(this.get$reserved(), "class"), this.get$identifier()), this.braces$1(this.get$classBody())), new $._AdtParsers_classDecl_anon());
},
 get$classBody: function() {
  return this.get$method().get$many();
},
 get$method: function() {
  return this.lexeme$1(this.get$_method());
},
 get$_method: function() {
  return $.or($.or($.or(this.get$getMethod(), this.get$setMethod()), this.get$operatorMethod()), this.get$regularMethod());
},
 get$getMethod: function() {
  return $.xor($.add($.add($.add(this.typeAppl$0().get$record(), $.index(this.get$reserved(), "get").get$record()), this.get$identifier().get$record()), this.get$methodBody().get$record()), new $._AdtParsers_getMethod_anon());
},
 get$setMethod: function() {
  return $.xor($.add($.add($.add($.index(this.get$reserved(), "set"), this.get$identifier().get$record()), this.parens$1(this.get$parameter()).get$record()), this.get$methodBody().get$record()), new $._AdtParsers_setMethod_anon());
},
 get$operatorMethod: function() {
  return $.xor($.add($.add($.add($.add(this.typeAppl$0().get$record(), $.index(this.get$reserved(), "operator")), this.op.get$record()), this.parens$1(this.get$parameter().sepBy$1(this.get$comma())).get$record()), this.get$methodBody().get$record()), new $._AdtParsers_operatorMethod_anon());
},
 get$regularMethod: function() {
  return $.xor($.add($.add($.add(this.typeAppl$0().get$record(), this.get$identifier().get$record()), this.parens$1(this.get$parameter().sepBy$1(this.get$comma())).get$record()), this.get$methodBody().get$record()), new $._AdtParsers_regularMethod_anon());
},
 get$methodBody: function() {
  return $.or($.or($.$char(";"), $.string("=>").operator$gt$1($.get$anyChar().skipManyUntil$1($.$char(";")))), this.multiLineBody$0());
},
 multiLineBody$0: function() {
  var t1, t3, t4, t6;
  t1 = $.$char("{");
  if (typeof t1 !== 'number')
    return this.multiLineBody$0$bailout(1, t1);
  t3 = $.noneOf("{}").get$skipMany();
  t4 = $.$char("}");
  if (t4 !== (t4 | 0))
    return this.multiLineBody$0$bailout(2, t3, t1, t4);
  t6 = $.rec(this.get$multiLineBody()).operator$gt$1($.rec(this.get$inMethodBody()));
  if (t6 !== (t6 | 0))
    return this.multiLineBody$0$bailout(3, t3, t1, t4, t6);
  return $.gt(t1, $.gt(t3, (t4 | t6) >>> 0));
},
 multiLineBody$0$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t4 = env2;
      t1 = env1;
      t3 = env0;
      break;
    case 3:
      t6 = env3;
      t4 = env2;
      t1 = env1;
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = $.$char("{");
    case 1:
      state0 = 0;
      t3 = $.noneOf("{}").get$skipMany();
      t4 = $.$char("}");
    case 2:
      state0 = 0;
      t6 = $.rec(this.get$multiLineBody()).operator$gt$1($.rec(this.get$inMethodBody()));
    case 3:
      var t1, t3, t4, t6;
      state0 = 0;
      return $.gt(t1, $.gt(t3, $.or(t4, t6)));
  }
},
 get$multiLineBody: function() { return new $.BoundClosure0(this, 'multiLineBody$0'); },
 inMethodBody$0: function() {
  var t1, t3, t5;
  t1 = $.noneOf("{}").get$skipMany();
  if (typeof t1 !== 'number')
    return this.inMethodBody$0$bailout(1, t1);
  t3 = $.$char("}");
  if (t3 !== (t3 | 0))
    return this.inMethodBody$0$bailout(2, t3, t1);
  t5 = $.rec(this.get$multiLineBody()).operator$gt$1($.rec(this.get$inMethodBody()));
  if (t5 !== (t5 | 0))
    return this.inMethodBody$0$bailout(3, t5, t3, t1);
  return t1 > (t3 | t5) >>> 0;
},
 inMethodBody$0$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env1;
      t3 = env0;
      break;
    case 3:
      t1 = env2;
      t3 = env1;
      t5 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = $.noneOf("{}").get$skipMany();
    case 1:
      state0 = 0;
      t3 = $.$char("}");
    case 2:
      state0 = 0;
      t5 = $.rec(this.get$multiLineBody()).operator$gt$1($.rec(this.get$inMethodBody()));
    case 3:
      var t1, t3, t5;
      state0 = 0;
      return $.gt(t1, $.or(t3, t5));
  }
},
 get$inMethodBody: function() { return new $.BoundClosure0(this, 'inMethodBody$0'); },
 _AdtParsers$0: function() {
  var t1 = $.get$_operators();
  this.op = $.choice($.getInterceptor$JSArray(t1).map$1(t1, this.get$symbol()));
}
};

$$.Module = {"":"Object;adts?,classes?",
 toString$0: function() {
  return "Module(" + $.S(this.adts) + ", " + $.S(this.classes) + ")";
}
};

$$.DataTypeDefinition = {"":"Object;name?,variables?,constructors?",
 toString$0: function() {
  var args, t1, constrs;
  args = $.Strings_join(this.variables, ", ");
  t1 = this.constructors;
  constrs = $.Strings_join($.getInterceptor$JSArray(t1).map$1(t1, $._toString), " | ");
  return "adt " + $.S(this.name) + "<" + args + "> = " + constrs;
}
};

$$.Constructor = {"":"Object;name?,parameters?",
 toString$0: function() {
  var t1, params;
  t1 = this.parameters;
  params = $.Strings_join($.getInterceptor$JSArray(t1).map$1(t1, $._toString), ", ");
  return $.S(this.name) + "(" + params + ")";
}
};

$$.Parameter = {"":"Object;name?,type?",
 toString$0: function() {
  return $.S(this.type) + " " + $.S(this.name);
}
};

$$.TypeAppl = {"":"Object;name?,arguments",
 toString$0: function() {
  var t1, t2, t3, args;
  t1 = this.arguments;
  t2 = $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) === true;
  t3 = this.name;
  if (t2)
    return t3;
  else {
    args = $.Strings_join($.getInterceptor$JSArray(t1).map$1(t1, $._toString), ", ");
    return $.S(t3) + "<" + args + ">";
  }
}
};

$$.Class = {"":"Object;name?,methods?",
 toString$0: function() {
  return "Class(" + $.S(this.name) + ", " + $.S(this.methods) + ")";
},
 Class$2: function(name$, methods) {
  var t1, t2;
  this.methods = $.makeLiteralMap([]);
  for (t1 = $.getInterceptor$JSArray(methods).iterator$0(methods); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    $.indexSet(this.methods, t2.get$name(), t2);
  }
}
};

$$.Method = {"":"Object;name?,text?",
 toString$0: function() {
  return "Method(" + $.S(this.name) + ", " + $.S(this.text) + ")";
}
};

$$.Expectations = {"":"Object;expected?,position?",
 best$1: function(other) {
  var t1, t3, t2, newSet;
  t1 = this.position;
  if (typeof t1 !== 'number')
    return this.best$1$bailout(1, other, t1);
  t3 = other.get$position();
  if (typeof t3 !== 'number')
    return this.best$1$bailout(2, other, t3, t1);
  if (t1 < t3)
    return other;
  t2 = other.get$position();
  if (typeof t2 !== 'number')
    return this.best$1$bailout(3, other, t1, t2);
  if (t1 > t2)
    return this;
  newSet = this.expected;
  $.getInterceptor$JSArray(newSet).addAll$1(newSet, other.get$expected());
  return $.Expectations$(newSet, t1);
},
 best$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      other = env0;
      break;
    case 2:
      t1 = env2;
      t3 = env1;
      other = env0;
      break;
    case 3:
      t2 = env2;
      t1 = env1;
      other = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.position;
    case 1:
      state0 = 0;
      t3 = other.get$position();
    case 2:
      state0 = 0;
      if ($.ltB(t1, t3))
        return other;
      t2 = other.get$position();
    case 3:
      var t1, other, t3, t2, newSet;
      state0 = 0;
      if ($.gtB(t1, t2))
        return this;
      newSet = this.expected;
      $.getInterceptor$JSArray(newSet).addAll$1(newSet, other.get$expected());
      return $.Expectations$(newSet, t1);
  }
}
};

$$.ParseResult = {"":"Object;isSuccess?,value?,text?,position?,expectations?",
 get$rest: function() {
  var t1 = this.text;
  return $.getInterceptor$JSString(t1).substring$1(t1, this.position);
},
 get$errorMessage: function() {
  var t1, maxPos, t2, seen, expected;
  t1 = this.expectations;
  maxPos = t1.get$position();
  t2 = this.text;
  seen = $.ltB(maxPos, $.getInterceptor$JSStringJSArray(t2).get$length(t2)) ? "'" + $.S($.index(t2, maxPos)) + "'" : "eof";
  expected = t1.get$expected();
  if ($.getInterceptor$JSStringJSArray(expected).get$isEmpty(expected) === true)
    return "unexpected " + seen + ".";
  else
    return "expected " + $.S($._humanOr($.List_List$from(expected))) + ", got " + seen + ".";
},
 get$_shortRest: function() {
  var t1, t2;
  t1 = this.get$rest();
  if ($.ltB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 10))
    t1 = this.get$rest();
  else {
    t1 = this.get$rest();
    t2 = $.S($.getInterceptor$JSString(t1).substring$2(t1, 0, 10)) + "...";
    t1 = t2;
  }
  return t1;
},
 toString$0: function() {
  return this.isSuccess === true ? "success: {value: " + $.S(this.value) + ", rest: \"" + $.S(this.get$_shortRest()) + "\"}" : "failure: {message: " + $.S(this.get$errorMessage()) + ", rest: \"" + $.S(this.get$_shortRest()) + "\"}";
}
};

$$.Parser = {"":"Object;_run",
 _run$2: function(arg0, arg1) {
  return this._run.call$2(arg0, arg1);
},
 run$2: function(s, pos) {
  return this._run$2(s, pos);
},
 run$1: function(s) {
  return this.run$2(s, 0);
},
 operator$shr$1: function(g) {
  return $.Parser$(new $.Parser_operator$shr_anon(g, this));
},
 expecting$1: function(expected) {
  return $.Parser$(new $.Parser_expecting_anon(this, expected));
},
 operator$mod$1: function(expected) {
  return this.expecting$1(expected);
},
 operator$mul$1: function(p) {
  return this.operator$shr$1(new $.Parser_operator$mul_anon(p));
},
 operator$gt$1: function(p) {
  return this.operator$shr$1(new $.Parser_operator$gt_anon(p));
},
 operator$lt$1: function(p) {
  return this.operator$shr$1(new $.Parser_operator$lt_anon(p));
},
 map$1: function(f) {
  return $.pure(f).operator$mul$1(this);
},
 operator$xor$1: function(f) {
  return $.pure(f).operator$mul$1(this);
},
 operator$add$1: function(p) {
  return $.ParserAccumulator2$(this, p);
},
 operator$or$1: function(p) {
  return $.Parser$(new $.Parser_operator$or_anon(p, this));
},
 get$notAhead: function() {
  return $.Parser$(new $.Parser_notAhead_anon(this));
},
 notFollowedBy$1: function(p) {
  return this.operator$lt$1(p.get$notAhead());
},
 skipManyUntil$1: function(end) {
  return $.Parser$(new $.Parser_skipManyUntil_anon(this, end));
},
 orElse$1: function(value) {
  return this.operator$or$1($.pure(value));
},
 _many$1: function(acc) {
  return $.Parser$(new $.Parser__many_anon(this, acc));
},
 get$many: function() {
  return this._many$1(new $.Parser_many_anon());
},
 get$skipMany: function() {
  return $.Parser$(new $.Parser_skipMany_anon(this));
},
 sepBy$1: function(sep) {
  return this.sepBy1$1(sep).orElse$1([]);
},
 sepBy1$1: function(sep) {
  return this.operator$shr$1(new $.Parser_sepBy1_anon(sep, this));
},
 between$2: function(left, right) {
  return $.gt(left, this.operator$lt$1(right));
},
 get$record: function() {
  return $.Parser$(new $.Parser_record_anon(this));
}
};

$$.ParserAccumulator2 = {"":"Object;p1,p2",
 operator$add$1: function(p) {
  return $.ParserAccumulator3$(this.p1, this.p2, p);
},
 operator$xor$1: function(f) {
  return $.mul($.pure(new $.ParserAccumulator2_operator$xor_anon(f)).operator$mul$1(this.p1), this.p2);
}
};

$$.ParserAccumulator3 = {"":"Object;p1,p2,p3",
 operator$add$1: function(p) {
  return $.ParserAccumulator4$(this.p1, this.p2, this.p3, p);
},
 operator$xor$1: function(f) {
  return $.mul($.mul($.pure(new $.ParserAccumulator3_operator$xor_anon(f)).operator$mul$1(this.p1), this.p2), this.p3);
}
};

$$.ParserAccumulator4 = {"":"Object;p1,p2,p3,p4",
 operator$add$1: function(p) {
  return $.ParserAccumulator5$(this.p1, this.p2, this.p3, this.p4, p);
},
 operator$xor$1: function(f) {
  return $.mul($.mul($.mul($.pure(new $.ParserAccumulator4_operator$xor_anon(f)).operator$mul$1(this.p1), this.p2), this.p3), this.p4);
}
};

$$.ParserAccumulator5 = {"":"Object;p1,p2,p3,p4,p5",
 operator$xor$1: function(f) {
  return $.mul($.mul($.mul($.mul($.pure(new $.ParserAccumulator5_operator$xor_anon(f)).operator$mul$1(this.p1), this.p2), this.p3), this.p4), this.p5);
}
};

$$.ReservedNames = {"":"Object;_lib2_map",
 operator$index$1: function(key) {
  var res = $.index(this._lib2_map, key);
  if (res == null)
    throw $.$$throw($.S(key) + " is not a reserved name");
  else
    return res;
}
};

$$.LanguageParsers = {"":"Object;_reservedNames?",
 get$comma: function() {
  return $.mod(this.symbol$1(","), "comma");
},
 get$_ident: function() {
  return $.mul($.pure(new $.LanguageParsers__ident_anon()).operator$mul$1(this._identStart), this._identLetter.get$many());
},
 get$identifier: function() {
  return $.mod(this.lexeme$1($.shr(this.get$_ident(), new $.LanguageParsers_identifier_anon(this))), "identifier");
},
 get$reserved: function() {
  var map, t1, t2, t3;
  if (this._reserved == null) {
    map = $.Map_Map();
    if (typeof map !== 'object' || map === null || (map.constructor !== Array || !!map.immutable$list) && !map.is$JavaScriptIndexingBehavior())
      return this.get$reserved$bailout(1, map);
    for (t1 = this._reservedNames, t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      t3 = this.lexeme$1($.string(t2).notFollowedBy$1(this._identLetter));
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= map.length)
        throw $.ioore(t2);
      map[t2] = t3;
    }
    this._reserved = $.ReservedNames$_(map);
  }
  return this._reserved;
},
 get$reserved$bailout: function(state0, env0) {
  switch (state0) {
    case 1:
      map = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      var map, t1, t2;
      if (state0 === 1 || state0 === 0 && this._reserved == null)
        switch (state0) {
          case 0:
            map = $.Map_Map();
          case 1:
            state0 = 0;
            for (t1 = this._reservedNames, t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;) {
              t2 = t1.next$0();
              $.indexSet(map, t2, this.lexeme$1($.string(t2).notFollowedBy$1(this._identLetter)));
            }
            this._reserved = $.ReservedNames$_(map);
        }
      return this._reserved;
  }
},
 symbol$1: function(symb) {
  return this.lexeme$1($.string(symb));
},
 get$symbol: function() { return new $.BoundClosure(this, 'symbol$1'); },
 lexeme$1: function(p) {
  return $.lt(p, this.get$whiteSpace());
},
 get$_start: function() {
  return $.string(this._commentStart);
},
 get$_end: function() {
  return $.string(this._commentEnd);
},
 get$_notStartNorEnd: function() {
  return $.gt($.or(this.get$_start(), this.get$_end()).get$notAhead(), $.get$anyChar());
},
 _multiLineComment$0: function() {
  return $.gt(this.get$_start(), this._inComment$0());
},
 get$_multiLineComment: function() { return new $.BoundClosure0(this, '_multiLineComment$0'); },
 _inComment$0: function() {
  return this._nestedComments === true ? this._inCommentMulti$0() : this._inCommentSingle$0();
},
 _inCommentMulti$0: function() {
  return $.gt(this.get$_notStartNorEnd().get$skipMany(), this._recOrEnd$0());
},
 get$_inCommentMulti: function() { return new $.BoundClosure0(this, '_inCommentMulti$0'); },
 _recOrEnd$0: function() {
  return $.or($.rec(this.get$_multiLineComment()).operator$gt$1($.rec(this.get$_inCommentMulti())), $.gt(this.get$_end(), $.pure(null)));
},
 _inCommentSingle$0: function() {
  return $.get$anyChar().skipManyUntil$1(this.get$_end());
},
 get$_oneLineComment: function() {
  return $.string(this._commentLine).operator$gt$1($.gt($.pred(new $.LanguageParsers__oneLineComment_anon()).get$skipMany(), $.pure(null)));
},
 get$whiteSpace: function() {
  return $.mod(this.get$_whiteSpace(), "whitespace/comment");
},
 get$_whiteSpace: function() {
  var t1, t2;
  t1 = this._commentLine;
  if ($.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) === true) {
    t1 = this._commentStart;
    t2 = $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) === true;
    t1 = t2;
  } else
    t1 = false;
  if (t1)
    return $.get$space().get$skipMany();
  else {
    t1 = this._commentLine;
    if ($.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) === true)
      return $.or($.get$space(), this._multiLineComment$0()).get$skipMany();
    else {
      t1 = this._commentStart;
      if ($.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) === true)
        return $.or($.get$space(), this.get$_oneLineComment()).get$skipMany();
      else
        return $.or($.or($.get$space(), this.get$_oneLineComment()), this._multiLineComment$0()).get$skipMany();
    }
  }
},
 parens$1: function(p) {
  return p.between$2(this.symbol$1("("), this.symbol$1(")"));
},
 braces$1: function(p) {
  return p.between$2(this.symbol$1("{"), this.symbol$1("}"));
},
 angles$1: function(p) {
  return p.between$2(this.symbol$1("<"), this.symbol$1(">"));
},
 LanguageParsers$7$commentEnd$commentLine$commentStart$identLetter$identStart$nestedComments$reservedNames: function(commentEnd, commentLine, commentStart, identLetter, identStart, nestedComments, reservedNames) {
  var identStartDefault, identLetterDefault;
  identStartDefault = $.or($.get$letter(), $.$char("_"));
  identLetterDefault = $.or($.get$alphanum(), $.$char("_"));
  this._commentStart = commentStart;
  this._commentEnd = commentEnd;
  this._commentLine = commentLine;
  this._nestedComments = nestedComments;
  this._identStart = identStart == null ? identStartDefault : identStart;
  this._identLetter = identLetter == null ? identLetterDefault : identLetter;
  this._reservedNames = $.Set_Set$from(reservedNames);
}
};

$$.Configuration = {"":"Object;finalFields?,isGetters?,asGetters?,withMethod?,equality?,toStringMethod?,fromString,parser?,enumerator?,visitor?,matchMethod?,extractor,toJson,fromJson"
};

$$.init_autogenerated_anon = {"":"Closure;box_0",
 call$1: function($$event) {
  $.input = this.box_0.__def_1.get$value();
  $.dispatch();
}
};

$$.init_autogenerated_anon0 = {"":"Closure;",
 call$0: function() {
  return $.input;
}
};

$$.init_autogenerated_anon1 = {"":"Closure;box_0",
 call$1: function(__e) {
  var t1 = __e.get$newValue();
  this.box_0.__def_1.set$value(t1);
}
};

$$.init_autogenerated_anon2 = {"":"Closure;box_0",
 call$1: function($$event) {
  $.finalFields = this.box_0.__e0_2.get$checked();
  $.dispatch();
}
};

$$.init_autogenerated_anon3 = {"":"Closure;",
 call$0: function() {
  return $.finalFields;
}
};

$$.init_autogenerated_anon4 = {"":"Closure;box_0",
 call$1: function(__e) {
  var t1 = __e.get$newValue();
  this.box_0.__e0_2.set$checked(t1);
}
};

$$.init_autogenerated_anon5 = {"":"Closure;box_0",
 call$1: function($$event) {
  $.isGetters = this.box_0.__e1_3.get$checked();
  $.dispatch();
}
};

$$.init_autogenerated_anon6 = {"":"Closure;",
 call$0: function() {
  return $.isGetters;
}
};

$$.init_autogenerated_anon7 = {"":"Closure;box_0",
 call$1: function(__e) {
  var t1 = __e.get$newValue();
  this.box_0.__e1_3.set$checked(t1);
}
};

$$.init_autogenerated_anon8 = {"":"Closure;box_0",
 call$1: function($$event) {
  $.asGetters = this.box_0.__e2_4.get$checked();
  $.dispatch();
}
};

$$.init_autogenerated_anon9 = {"":"Closure;",
 call$0: function() {
  return $.asGetters;
}
};

$$.init_autogenerated_anon10 = {"":"Closure;box_0",
 call$1: function(__e) {
  var t1 = __e.get$newValue();
  this.box_0.__e2_4.set$checked(t1);
}
};

$$.init_autogenerated_anon11 = {"":"Closure;box_0",
 call$1: function($$event) {
  $.withMethod = this.box_0.__e3_5.get$checked();
  $.dispatch();
}
};

$$.init_autogenerated_anon12 = {"":"Closure;",
 call$0: function() {
  return $.withMethod;
}
};

$$.init_autogenerated_anon13 = {"":"Closure;box_0",
 call$1: function(__e) {
  var t1 = __e.get$newValue();
  this.box_0.__e3_5.set$checked(t1);
}
};

$$.init_autogenerated_anon14 = {"":"Closure;box_0",
 call$1: function($$event) {
  $.equality = this.box_0.__e4_6.get$checked();
  $.dispatch();
}
};

$$.init_autogenerated_anon15 = {"":"Closure;",
 call$0: function() {
  return $.equality;
}
};

$$.init_autogenerated_anon16 = {"":"Closure;box_0",
 call$1: function(__e) {
  var t1 = __e.get$newValue();
  this.box_0.__e4_6.set$checked(t1);
}
};

$$.init_autogenerated_anon17 = {"":"Closure;box_0",
 call$1: function($$event) {
  $.toStringMethod = this.box_0.__e5_7.get$checked();
  $.dispatch();
}
};

$$.init_autogenerated_anon18 = {"":"Closure;",
 call$0: function() {
  return $.toStringMethod;
}
};

$$.init_autogenerated_anon19 = {"":"Closure;box_0",
 call$1: function(__e) {
  var t1 = __e.get$newValue();
  this.box_0.__e5_7.set$checked(t1);
}
};

$$.init_autogenerated_anon20 = {"":"Closure;box_0",
 call$1: function($$event) {
  $.visitor = this.box_0.__e6_8.get$checked();
  $.dispatch();
}
};

$$.init_autogenerated_anon21 = {"":"Closure;",
 call$0: function() {
  return $.visitor;
}
};

$$.init_autogenerated_anon22 = {"":"Closure;box_0",
 call$1: function(__e) {
  var t1 = __e.get$newValue();
  this.box_0.__e6_8.set$checked(t1);
}
};

$$.init_autogenerated_anon23 = {"":"Closure;box_0",
 call$1: function($$event) {
  $.matchMethod = this.box_0.__e7_9.get$checked();
  $.dispatch();
}
};

$$.init_autogenerated_anon24 = {"":"Closure;",
 call$0: function() {
  return $.matchMethod;
}
};

$$.init_autogenerated_anon25 = {"":"Closure;box_0",
 call$1: function(__e) {
  var t1 = __e.get$newValue();
  this.box_0.__e7_9.set$checked(t1);
}
};

$$.init_autogenerated_anon26 = {"":"Closure;",
 call$0: function() {
  return $.S($.generated());
}
};

$$.init_autogenerated_anon27 = {"":"Closure;box_0",
 call$1: function(__e) {
  var t1, t2;
  t1 = $.generated();
  t2 = this.box_0;
  t2.__binding8_10 = $.updateBinding(t1, t2.__binding8_10, __e.get$newValue());
}
};

$$.watch_anon = {"":"Closure;",
 call$0: function() {
}
};

$$.watch_anon0 = {"":"Closure;target_0",
 call$0: function() {
  return this.target_0;
}
};

$$.watch_anon1 = {"":"Closure;watcher_1",
 call$0: function() {
  return $._unregister(this.watcher_1);
}
};

$$.Maps__emitMap_anon = {"":"Closure;visiting_3,box_0,result_2",
 call$2: function(k, v) {
  var t1, t2;
  t1 = this.box_0;
  if (t1.first_1 !== true) {
    t2 = this.result_2;
    $.getInterceptor$JSArray(t2).add$1(t2, ", ");
  }
  t1.first_1 = false;
  t1 = this.result_2;
  t2 = this.visiting_3;
  $.Collections__emitObject(k, t1, t2);
  $.getInterceptor$JSArray(t1).add$1(t1, ": ");
  $.Collections__emitObject(v, t1, t2);
}
};

$$._LinkedHashMapImpl_forEach_anon = {"":"Closure;f_0",
 call$1: function(entry) {
  this.f_0.call$2(entry.get$key(), entry.get$value());
}
};

$$.DoubleLinkedQueue_length_anon = {"":"Closure;box_0",
 call$1: function(element) {
  var t1 = this.box_0;
  t1.counter_1 = $.add(t1.counter_1, 1);
}
};

$$.NoSuchMethodError_toString_anon = {"":"Closure;box_0",
 call$2: function(key, value) {
  var t1, t2;
  t1 = this.box_0;
  if ($.gtB(t1.i_2, 0)) {
    t2 = t1.sb_1;
    $.getInterceptor$JSArray(t2).add$1(t2, ", ");
  }
  t2 = t1.sb_1;
  $.getInterceptor$JSArray(t2).add$1(t2, key);
  t2 = t1.sb_1;
  $.getInterceptor$JSArray(t2).add$1(t2, ": ");
  t2 = t1.sb_1;
  $.getInterceptor$JSArray(t2).add$1(t2, $.Error_safeToString(value));
  t1.i_2 = $.add(t1.i_2, 1);
}
};

$$.invokeClosure_anon = {"":"Closure;closure_0",
 call$0: function() {
  return this.closure_0.call$0();
}
};

$$.invokeClosure_anon0 = {"":"Closure;closure_2,arg1_1",
 call$0: function() {
  return this.closure_2.call$1(this.arg1_1);
}
};

$$.invokeClosure_anon1 = {"":"Closure;arg2_5,closure_4,arg1_3",
 call$0: function() {
  return this.closure_4.call$2(this.arg1_3, this.arg2_5);
}
};

$$.FilteredElementList__filtered_anon = {"":"Closure;",
 call$1: function(n) {
  return typeof n === 'object' && n !== null && n.is$Element();
}
};

$$._ChildrenElementList_filter_anon = {"":"Closure;f_1,output_0",
 call$1: function(element) {
  var t1;
  if (this.f_1.call$1(element) === true) {
    t1 = this.output_0;
    $.getInterceptor$JSArray(t1).add$1(t1, element);
  }
}
};

$$.FilteredElementList_removeRange_anon = {"":"Closure;",
 call$1: function(el) {
  return el.remove$0();
}
};

$$.ConstantMap_forEach_anon = {"":"Closure;this_1,f_0",
 call$1: function(key) {
  return this.f_0.call$2(key, $.index(this.this_1, key));
}
};

$$.CssClassSet_clear_anon = {"":"Closure;",
 call$1: function(s) {
  return $.getInterceptor$JSArray(s).clear$0(s);
}
};

$$._HashSetImpl_filter_anon = {"":"Closure;result_1,f_0",
 call$2: function(key, value) {
  var t1;
  if (this.f_0.call$1(key) === true) {
    t1 = this.result_1;
    $.getInterceptor$JSArray(t1).add$1(t1, key);
  }
}
};

$$._HashSetImpl_forEach_anon = {"":"Closure;f_0",
 call$2: function(key, value) {
  this.f_0.call$1(key);
}
};

$$._HashSetImpl_addAll_anon = {"":"Closure;this_0",
 call$1: function(value) {
  $.indexSet(this.this_0.get$_backingMap(), value, value);
}
};

$$.CssClassSet_addAll_anon = {"":"Closure;collection_0",
 call$1: function(s) {
  return $.getInterceptor$JSArray(s).addAll$1(s, this.collection_0);
}
};

$$.CssClassSet_add_anon = {"":"Closure;value_0",
 call$1: function(s) {
  return $.getInterceptor$JSArray(s).add$1(s, this.value_0);
}
};

$$._generate_overriden = {"":"Closure;classMap_0",
 call$2: function(className, methodName) {
  var t1 = this.classMap_0;
  return t1.containsKey$1(className) === true && $.index(t1, className).get$methods().containsKey$1(methodName) === true;
}
};

$$._generate_write = {"":"Closure;buffer_1",
 call$1: function(s) {
  var t1 = this.buffer_1;
  $.getInterceptor$JSArray(t1).add$1(t1, s);
}
};

$$._generate_writeLn = {"":"Closure;write_2",
 call$1: function(s) {
  this.write_2.call$1($.S(s) + "\n");
}
};

$$._generate_generateMatchMethodPrefix = {"":"Closure;write_3",
 call$1: function(def) {
  var acc, t1, t2, t3, low, typedParams, args;
  acc = [];
  for (t1 = def.get$constructors(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    t3 = t2.get$name();
    low = $.getInterceptor$JSString(t3).toLowerCase$0(t3);
    t2 = t2.get$parameters();
    typedParams = $.Strings_join($.getInterceptor$JSArray(t2).map$1(t2, new $._generate_generateMatchMethodPrefix_anon()), ", ");
    acc.push("Object " + $.S(low) + "(" + typedParams + ")");
  }
  args = $.Strings_join(acc, ",\n                ");
  this.write_3.call$1("  Object match({" + args + "})");
}
};

$$._generate_generateMatchMethodPrefix_anon = {"":"Closure;",
 call$1: function(p) {
  return $.S(p.get$type()) + " " + $.S(p.get$name());
}
};

$$._generate_generateConstructorClass = {"":"Closure;classMap_9,generateMatchMethodPrefix_8,writeLn_7,config_6,write_5,overriden_4",
 call$2: function(def, cons) {
  var typeArgs, t1, typedParams, t2, t3, t4, first, t5, sep, params, thisParams, isCons, asCons, args, xargs, acc, userClass;
  typeArgs = $._typeArgs(def.get$variables(), null);
  t1 = cons.get$parameters();
  typedParams = $.Strings_join($.getInterceptor$JSArray(t1).map$1(t1, new $._generate_generateConstructorClass_anon()), ", ");
  t2 = this.writeLn_7;
  t2.call$1("class " + $.S(cons.get$name()) + typeArgs + " extends " + ($.S(def.get$name()) + $._typeArgs(def.get$variables(), null)) + " {");
  for (t1 = cons.get$parameters(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1), t3 = this.config_6; t1.get$hasNext() === true;) {
    t4 = t1.next$0();
    t2.call$1("  " + (t3.get$finalFields() === true ? "final " : "") + $.S(t4) + ";");
  }
  if (t3.get$finalFields() === true && t3.get$equality() === true)
    t2.call$1("  final int hashCode;");
  if (t3.get$equality() === true && t3.get$finalFields() === true) {
    t1 = this.write_5;
    t1.call$1("  " + $.S(cons.get$name()) + "(" + typedParams + ")");
    for (t4 = cons.get$parameters(), t4 = $.getInterceptor$JSArray(t4).iterator$0(t4), first = true; t4.get$hasNext() === true; first = false) {
      t5 = t4.next$0();
      t1.call$1("\n      " + (first ? ":" : ",") + " this." + $.S(t5.get$name()) + " = " + $.S(t5.get$name()));
    }
    sep = first ? " :" : "\n      ,";
    t1 = cons.get$parameters();
    params = $.getInterceptor$JSArray(t1).map$1(t1, new $._generate_generateConstructorClass_anon0());
    t2.call$1(sep + " this.hashCode = " + $.S(cons.get$name()) + "._hashCode(" + $.Strings_join(params, ", ") + ");");
  } else {
    t1 = cons.get$parameters();
    thisParams = $.getInterceptor$JSArray(t1).map$1(t1, new $._generate_generateConstructorClass_anon1());
    t2.call$1("  " + $.S(cons.get$name()) + "(" + $.Strings_join(thisParams, ", ") + ");");
  }
  isCons = "is" + $.S(cons.get$name());
  if (t3.get$isGetters() === true && this.overriden_4.call$2(cons.get$name(), isCons) !== true)
    t2.call$1("  bool get " + isCons + " => true;");
  asCons = "as" + $.S(cons.get$name());
  if (t3.get$asGetters() === true && this.overriden_4.call$2(cons.get$name(), asCons) !== true)
    t2.call$1("  " + $.S(cons.get$name()) + typeArgs + " get " + asCons + " => this;");
  if (t3.get$equality() === true && this.overriden_4.call$2(cons.get$name(), "==") !== true) {
    t2.call$1("  bool operator ==(other) {");
    t2.call$1("    return identical(this, other)");
    t1 = this.write_5;
    t1.call$1("        || (other is " + $.S(cons.get$name()) + typeArgs);
    for (t4 = cons.get$parameters(), t4 = $.getInterceptor$JSArray(t4).iterator$0(t4); t4.get$hasNext() === true;) {
      t5 = t4.next$0();
      t1.call$1("\n            && " + $.S(t5.get$name()) + " == other." + $.S(t5.get$name()));
    }
    t2.call$1(");");
    t2.call$1("  }");
  }
  if (t3.get$equality() === true && this.overriden_4.call$2(cons.get$name(), "hashCode") !== true) {
    if (t3.get$finalFields() !== true)
      t2.call$1("  int get hashCode {");
    else {
      t1 = cons.get$parameters();
      t2.call$1("  static int _hashCode(" + $.Strings_join($.getInterceptor$JSArray(t1).map$1(t1, new $._generate_generateConstructorClass_anon2()), ", ") + ") {");
    }
    t2.call$1("    int result = \"" + $.S(cons.get$name()) + "\".hashCode;");
    for (t1 = cons.get$parameters(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;)
      t2.call$1("    result = 31 * result + " + $.S(t1.next$0().get$name()) + ".hashCode;");
    t2.call$1("    return result;");
    t2.call$1("  }");
  }
  if (t3.get$toStringMethod() === true && this.overriden_4.call$2(cons.get$name(), "toString") !== true) {
    t2.call$1("  String toString() {");
    t1 = cons.get$parameters();
    args = $.getInterceptor$JSArray(t1).map$1(t1, new $._generate_generateConstructorClass_anon3());
    t2.call$1("    return '" + $.S(cons.get$name()) + "(" + $.Strings_join(args, ", ") + ")';");
    t2.call$1("  }");
  }
  if (t3.get$visitor() === true && this.overriden_4.call$2(cons.get$name(), "accept") !== true) {
    xargs = $._typeArgs(def.get$variables(), "Object");
    t2.call$1("  Object accept(" + $.S(def.get$name()) + "Visitor" + xargs + " visitor) {");
    t2.call$1("    return visitor.visit" + $.S(cons.get$name()) + "(this);");
    t2.call$1("  }");
  }
  if (t3.get$matchMethod() === true && this.overriden_4.call$2(cons.get$name(), "match") !== true) {
    this.generateMatchMethodPrefix_8.call$1(def);
    t2.call$1(" {");
    t1 = cons.get$parameters();
    args = $.Strings_join($.getInterceptor$JSArray(t1).map$1(t1, new $._generate_generateConstructorClass_anon4()), ", ");
    t4 = cons.get$name();
    t2.call$1("    return " + $.S($.getInterceptor$JSString(t4).toLowerCase$0(t4)) + "(" + args + ");");
    t2.call$1("  }");
  }
  if (t3.get$withMethod() === true) {
    t1 = cons.get$parameters();
    t1 = $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) !== true && this.overriden_4.call$2(cons.get$name(), "with") !== true;
  } else
    t1 = false;
  if (t1) {
    t2.call$1("  " + $.S(cons.get$name()) + typeArgs + " with({" + typedParams + "}) {");
    t2.call$1("    return new " + $.S(cons.get$name()) + "(");
    acc = [];
    for (t1 = cons.get$parameters(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;) {
      t3 = t1.next$0();
      acc.push("        ?" + $.S(t3.get$name()) + " ? " + $.S(t3.get$name()) + " : this." + $.S(t3.get$name()));
    }
    this.write_5.call$1($.Strings_join(acc, ",\n"));
    t2.call$1(");");
    t2.call$1("  }");
  }
  userClass = $.index(this.classMap_9, cons.get$name());
  if (!(userClass == null)) {
    t1 = userClass.get$methods();
    $.getInterceptor$JSArray(t1).forEach$1(t1, new $._generate_generateConstructorClass_anon5(t2));
  }
  t2.call$1("}");
}
};

$$._generate_generateConstructorClass_anon = {"":"Closure;",
 call$1: function(p) {
  return $.S(p.get$type()) + " " + $.S(p.get$name());
}
};

$$._generate_generateConstructorClass_anon0 = {"":"Closure;",
 call$1: function(p) {
  return p.get$name();
}
};

$$._generate_generateConstructorClass_anon1 = {"":"Closure;",
 call$1: function(p) {
  return "this." + $.S(p.get$name());
}
};

$$._generate_generateConstructorClass_anon2 = {"":"Closure;",
 call$1: function(p) {
  return p.get$name();
}
};

$$._generate_generateConstructorClass_anon3 = {"":"Closure;",
 call$1: function(p) {
  return "$" + $.S(p.get$name());
}
};

$$._generate_generateConstructorClass_anon4 = {"":"Closure;",
 call$1: function(p) {
  return p.get$name();
}
};

$$._generate_generateConstructorClass_anon5 = {"":"Closure;writeLn_10",
 call$2: function(_, m) {
  this.writeLn_10.call$1("  " + $.S(m.get$text()));
}
};

$$._generate_generateSuperClass = {"":"Closure;config_15,classMap_14,generateMatchMethodPrefix_13,writeLn_12,overriden_11",
 call$1: function(def) {
  var typeArgs, t1, t2, t3, t4, isCons, t5, asCons, xargs, userClass;
  typeArgs = $._typeArgs(def.get$variables(), null);
  t1 = this.writeLn_12;
  t1.call$1("abstract class " + ($.S(def.get$name()) + $._typeArgs(def.get$variables(), null)) + " {");
  t2 = this.config_15;
  if (t2.get$isGetters() === true)
    for (t3 = def.get$constructors(), t3 = $.getInterceptor$JSArray(t3).iterator$0(t3), t4 = this.overriden_11; t3.get$hasNext() === true;) {
      isCons = "is" + $.S(t3.next$0().get$name());
      if (t4.call$2(def.get$name(), isCons) !== true)
        t1.call$1("  bool get " + isCons + " => false;");
    }
  if (t2.get$asGetters() === true)
    for (t3 = def.get$constructors(), t3 = $.getInterceptor$JSArray(t3).iterator$0(t3), t4 = this.overriden_11; t3.get$hasNext() === true;) {
      t5 = t3.next$0();
      asCons = "as" + $.S(t5.get$name());
      if (t4.call$2(def.get$name(), asCons) !== true)
        t1.call$1("  " + $.S(t5.get$name()) + typeArgs + " get " + asCons + " => null;");
    }
  if (t2.get$visitor() === true) {
    t3 = def.get$constructors();
    t3 = $.getInterceptor$JSStringJSArray(t3).get$isEmpty(t3) !== true && this.overriden_11.call$2(def.get$name(), "accept") !== true;
  } else
    t3 = false;
  if (t3) {
    xargs = $._typeArgs(def.get$variables(), "Object");
    t1.call$1("  Object accept(" + $.S(def.get$name()) + "Visitor" + xargs + " visitor);");
  }
  if (t2.get$matchMethod() === true) {
    t2 = def.get$constructors();
    t2 = $.getInterceptor$JSStringJSArray(t2).get$isEmpty(t2) !== true && this.overriden_11.call$2(def.get$name(), "accept") !== true;
  } else
    t2 = false;
  if (t2) {
    this.generateMatchMethodPrefix_13.call$1(def);
    t1.call$1(";");
  }
  userClass = $.index(this.classMap_14, def.get$name());
  if (!(userClass == null)) {
    t2 = userClass.get$methods();
    $.getInterceptor$JSArray(t2).forEach$1(t2, new $._generate_generateSuperClass_anon(t1));
  }
  t1.call$1("}");
}
};

$$._generate_generateSuperClass_anon = {"":"Closure;writeLn_16",
 call$2: function(_, m) {
  this.writeLn_16.call$1("  " + $.S(m.get$text()));
}
};

$$._generate_generateVisitorClass = {"":"Closure;classMap_19,overriden_18,writeLn_17",
 call$1: function(def) {
  var t1, v, v0, args, xargs, visitorName, t2, t3, t4, t5, low, visitCons, userClass;
  t1 = def.get$constructors();
  if ($.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) === true)
    return;
  t1 = def.get$variables();
  for (v = "R"; $.getInterceptor$JSStringJSArray(t1).contains$1(t1, v) === true; v = v0)
    v0 = v + "_";
  args = $._typeArgs(def.get$variables(), null);
  xargs = $._typeArgs(def.get$variables(), v);
  visitorName = $.S(def.get$name()) + "Visitor";
  t1 = this.writeLn_17;
  t1.call$1("abstract class " + visitorName + xargs + " {");
  for (t2 = def.get$constructors(), t2 = $.getInterceptor$JSArray(t2).iterator$0(t2), t3 = this.overriden_18; t2.get$hasNext() === true;) {
    t4 = t2.next$0();
    t5 = t4.get$name();
    low = $.getInterceptor$JSString(t5).toLowerCase$0(t5);
    visitCons = "visit" + $.S(t4.get$name());
    if (t3.call$2(visitorName, visitCons) !== true)
      t1.call$1("  " + v + " " + visitCons + "(" + $.S(t4.get$name()) + args + " " + $.S(low) + ");");
  }
  userClass = $.index(this.classMap_19, visitorName);
  if (!(userClass == null)) {
    t2 = userClass.get$methods();
    $.getInterceptor$JSArray(t2).forEach$1(t2, new $._generate_generateVisitorClass_anon(t1));
  }
  t1.call$1("}");
}
};

$$._generate_generateVisitorClass_anon = {"":"Closure;writeLn_20",
 call$2: function(_, m) {
  this.writeLn_20.call$1("  " + $.S(m.get$text()));
}
};

$$._generate_generateDefinition = {"":"Closure;config_25,generateVisitorClass_24,generateConstructorClass_23,generateSuperClass_22,writeLn_21",
 call$1: function(def) {
  var t1, t2, t3;
  this.generateSuperClass_22.call$1(def);
  t1 = this.writeLn_21;
  t1.call$1("");
  if (this.config_25.get$visitor() === true) {
    this.generateVisitorClass_24.call$1(def);
    t1.call$1("");
  }
  for (t2 = def.get$constructors(), t2 = $.getInterceptor$JSArray(t2).iterator$0(t2), t3 = this.generateConstructorClass_23; t2.get$hasNext() === true;) {
    t3.call$2(def, t2.next$0());
    t1.call$1("");
  }
}
};

$$._generate_generateImports = {"":"Closure;config_27,writeLn_26",
 call$0: function() {
  var t1, written;
  t1 = this.config_27;
  if (t1.get$parser() === true) {
    this.writeLn_26.call$1("import 'package:parsers/parsers.dart' as parsers;");
    written = true;
  } else
    written = false;
  if (t1.get$enumerator() === true) {
    t1 = this.writeLn_26;
    t1.call$1("import 'package:enumerators/enumerators.dart' as enumerators;");
    t1.call$1("import 'package:enumerators/combinators.dart' as combinators;");
    written = true;
  }
  if (written)
    this.writeLn_26.call$1("");
}
};

$$._HashSetImpl_map_anon = {"":"Closure;f_1,result_0",
 call$2: function(key, value) {
  var t1 = this.result_0;
  $.getInterceptor$JSArray(t1).add$1(t1, this.f_1.call$1(key));
}
};

$$._AdtParsers_module_anon = {"":"Closure;",
 call$4: function(_, adts, classes, __) {
  return $.Module$(adts, classes);
}
};

$$.anon = {"":"Closure;",
 call$2: function(s, pos) {
  var t1, t2;
  if ($.geB(pos, $.getInterceptor$JSStringJSArray(s).get$length(s)))
    t1 = $._success(null, s, pos, $);
  else {
    t1 = $.Set_Set();
    $.getInterceptor$JSArray(t1).add$1(t1, "eof");
    t2 = $._failure(s, pos, $.Expectations$(t1, pos));
    t1 = t2;
  }
  return t1;
}
};

$$.Parser_many_anon = {"":"Closure;",
 call$0: function() {
  return [];
}
};

$$.Parser__many_anon = {"":"Closure;this_1,acc_0",
 call$2: function(s, pos) {
  var res, exps, t1, t2, index, o;
  res = this.acc_0.call$0();
  exps = $.Expectations$($.Set_Set(), pos);
  for (t1 = $.getInterceptor$JSArray(res), t2 = this.this_1, index = pos; true;) {
    o = t2._run$2(s, index);
    if (o.get$isSuccess() === true) {
      t1.add$1(res, o.get$value());
      index = o.get$position();
      exps = exps.best$1(o.get$expectations());
    } else
      return $._success(res, s, index, exps.best$1(o.get$expectations()));
  }
}
};

$$.pure_anon = {"":"Closure;value_0",
 call$2: function(s, pos) {
  return $._success(this.value_0, s, pos, $);
}
};

$$.Parser_operator$mul_anon = {"":"Closure;p_0",
 call$1: function(f) {
  return $.shr(this.p_0, new $.Parser_operator$mul__anon(f));
}
};

$$.Parser_operator$mul__anon = {"":"Closure;f_1",
 call$1: function(x) {
  return $.pure(this.f_1.call$1(x));
}
};

$$.Parser_operator$shr_anon = {"":"Closure;g_1,this_0",
 call$2: function(text, pos) {
  var res, res2, t1, t2;
  res = this.this_0._run$2(text, pos);
  if (res.get$isSuccess() === true) {
    res2 = this.g_1.call$1(res.get$value())._run$2(text, res.get$position());
    t1 = res2.get$isSuccess() === true;
    t2 = res2.get$text();
    if (t1)
      return $._success(res2.get$value(), t2, res2.get$position(), res.get$expectations().best$1(res2.get$expectations()));
    else
      return $._failure(t2, res2.get$position(), res.get$expectations().best$1(res2.get$expectations()));
  } else
    return res;
}
};

$$.Parser_operator$lt_anon = {"":"Closure;p_0",
 call$1: function(x) {
  return $.gt(this.p_0, $.pure(x));
}
};

$$.Parser_operator$gt_anon = {"":"Closure;p_0",
 call$1: function(_) {
  return this.p_0;
}
};

$$._AdtParsers_classDecl_anon = {"":"Closure;",
 call$3: function(_, n, ms) {
  return $.Class$(n, ms);
}
};

$$.string_anon = {"":"Closure;str_0",
 call$2: function(s, pos) {
  var t1, t3, max, match, i, t2, t4;
  if (typeof s !== 'string' && (typeof s !== 'object' || s === null || s.constructor !== Array && !s.is$JavaScriptIndexingBehavior()))
    return this.call$2$bailout(1, s, pos);
  if (typeof pos !== 'number')
    return this.call$2$bailout(1, s, pos);
  t1 = this.str_0;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.call$2$bailout(2, s, pos, t1);
  t3 = $.getInterceptor$JSStringJSArray(t1);
  max = pos + t1.length;
  match = s.length >= max;
  i = 0;
  while (true) {
    t2 = t1.length;
    if (!(i < t2 && match))
      break;
    if (match) {
      if (i >= t2)
        throw $.ioore(i);
      t3 = t1[i];
      t4 = pos + i;
      if (t4 !== (t4 | 0))
        throw $.iae(t4);
      if (t4 < 0 || t4 >= s.length)
        throw $.ioore(t4);
      match = $.eqB(t3, s[t4]);
    } else
      match = false;
    ++i;
  }
  if (match)
    return $._success(t1, s, max, $);
  else {
    t2 = "'" + $.S(t1) + "'";
    t3 = $.Set_Set();
    $.getInterceptor$JSArray(t3).add$1(t3, t2);
    return $._failure(s, pos, $.Expectations$(t3, pos));
  }
},
 call$2$bailout: function(state0, env0, env1, env2, env3, env4, env5) {
  switch (state0) {
    case 1:
      pos = env1;
      s = env0;
      break;
    case 2:
      t1 = env2;
      pos = env1;
      s = env0;
      break;
    case 3:
      match = env5;
      max = env4;
      t3 = env3;
      t1 = env2;
      pos = env1;
      s = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      t1 = this.str_0;
    case 2:
      state0 = 0;
      t3 = $.getInterceptor$JSStringJSArray(t1);
      max = $.add(pos, t3.get$length(t1));
      match = $.ge($.getInterceptor$JSStringJSArray(s).get$length(s), max);
    case 3:
      var pos, s, t1, t3, max, match, i, t2;
      state0 = 0;
      i = 0;
      while (true) {
        if (!($.ltB(i, t3.get$length(t1)) && match === true))
          break;
        match = match === true && $.eqB($.index(t1, i), $.index(s, $.add(pos, i)));
        ++i;
      }
      if (match === true)
        return $._success(t1, s, max, $);
      else {
        t2 = "'" + $.S(t1) + "'";
        t3 = $.Set_Set();
        $.getInterceptor$JSArray(t3).add$1(t3, t2);
        return $._failure(s, pos, $.Expectations$(t3, pos));
      }
  }
}
};

$$._AdtParsers_regularMethod_anon = {"":"Closure;",
 call$4: function(t, n, as, b) {
  return $.Method$($.getInterceptor$JSString(n).trim$0(n), $.S(t) + $.S(n) + $.S(as) + $.S(b));
}
};

$$.rec_anon = {"":"Closure;f_0",
 call$2: function(s, pos) {
  return this.f_0.call$0()._run$2(s, pos);
}
};

$$.char_anon = {"":"Closure;chr_0",
 call$1: function(c) {
  return $.eq(c, this.chr_0);
}
};

$$.pred_anon = {"":"Closure;p_0",
 call$2: function(s, pos) {
  var c;
  if ($.geB(pos, $.getInterceptor$JSStringJSArray(s).get$length(s)))
    return $._failure(s, pos, $);
  else {
    c = $.index(s, pos);
    return this.p_0.call$1(c) === true ? $._success(c, s, $.add(pos, 1), $) : $._failure(s, pos, $);
  }
}
};

$$.Parser_expecting_anon = {"":"Closure;this_1,expected_0",
 call$2: function(s, pos) {
  var res, t1, t2, t3, t4, t5;
  res = this.this_1._run$2(s, pos);
  t1 = res.get$isSuccess() === true;
  t2 = res.get$text();
  t3 = this.expected_0;
  if (t1) {
    t1 = res.get$value();
    t4 = res.get$position();
    t5 = $.Set_Set();
    $.getInterceptor$JSArray(t5).add$1(t5, t3);
    t4 = $._success(t1, t2, t4, $.Expectations$(t5, pos));
    t1 = t4;
  } else {
    t1 = res.get$position();
    t4 = $.Set_Set();
    $.getInterceptor$JSArray(t4).add$1(t4, t3);
    t1 = $._failure(t2, t1, $.Expectations$(t4, pos));
  }
  return t1;
}
};

$$.noneOf_anon = {"":"Closure;chars_0",
 call$1: function(c) {
  var t1 = this.chars_0;
  return $.getInterceptor$JSStringJSArray(t1).contains$1(t1, c) !== true;
}
};

$$.Parser_operator$or_anon = {"":"Closure;p_1,this_0",
 call$2: function(s, pos) {
  var res, res2, t1, t2;
  res = this.this_0._run$2(s, pos);
  if (res.get$isSuccess() === true)
    return res;
  else {
    res2 = this.p_1._run$2(s, pos);
    t1 = res2.get$isSuccess() === true;
    t2 = res2.get$text();
    if (t1)
      return $._success(res2.get$value(), t2, res2.get$position(), res.get$expectations().best$1(res2.get$expectations()));
    else
      return $._failure(t2, res2.get$position(), res.get$expectations().best$1(res2.get$expectations()));
  }
}
};

$$.Parser_skipMany_anon = {"":"Closure;this_0",
 call$2: function(s, pos) {
  var exps, t1, index, o;
  exps = $.Expectations$($.Set_Set(), pos);
  for (t1 = this.this_0, index = pos; true;) {
    o = t1._run$2(s, index);
    if (o.get$isSuccess() === true) {
      index = o.get$position();
      exps = exps.best$1(o.get$expectations());
    } else
      return $._success(null, s, index, exps.best$1(o.get$expectations()));
  }
}
};

$$.Parser_skipManyUntil_anon = {"":"Closure;this_1,end_0",
 call$2: function(s, pos) {
  var exps, t1, t2, index, endRes, xRes;
  exps = $.Expectations$($.Set_Set(), pos);
  for (t1 = this.this_1, t2 = this.end_0, index = pos; true;) {
    endRes = t2._run$2(s, index);
    if (endRes.get$isSuccess() === true)
      return $._success(null, s, endRes.get$position(), exps.best$1(endRes.get$expectations()));
    else {
      xRes = t1._run$2(s, index);
      if (xRes.get$isSuccess() === true) {
        index = xRes.get$position();
        exps = exps.best$1(xRes.get$expectations());
      } else
        return $._failure(xRes.get$text(), xRes.get$position(), exps.best$1(endRes.get$expectations()));
    }
  }
}
};

$$.anon0 = {"":"Closure;",
 call$1: function(c) {
  return true;
}
};

$$.Parser_sepBy1_anon = {"":"Closure;sep_1,this_0",
 call$1: function(x) {
  return $.gt(this.sep_1, this.this_0)._many$1(new $.Parser_sepBy1__anon(x));
}
};

$$.Parser_sepBy1__anon = {"":"Closure;x_2",
 call$0: function() {
  return [this.x_2];
}
};

$$._AdtParsers_parameter_anon = {"":"Closure;",
 call$2: function(t, p) {
  return $.Parameter$(t, p);
}
};

$$.ParserAccumulator2_operator$xor_anon = {"":"Closure;f_0",
 call$1: function(x1) {
  return new $.ParserAccumulator2_operator$xor__anon(x1, this.f_0);
}
};

$$.ParserAccumulator2_operator$xor__anon = {"":"Closure;x1_2,f_1",
 call$1: function(x2) {
  return this.f_1.call$2(this.x1_2, x2);
}
};

$$.ParserAccumulator3_operator$xor_anon = {"":"Closure;f_0",
 call$1: function(x1) {
  return new $.ParserAccumulator3_operator$xor__anon(this.f_0, x1);
}
};

$$.ParserAccumulator3_operator$xor__anon = {"":"Closure;f_2,x1_1",
 call$1: function(x2) {
  return new $.ParserAccumulator3_operator$xor___anon(this.f_2, x2, this.x1_1);
}
};

$$.ParserAccumulator3_operator$xor___anon = {"":"Closure;f_5,x2_4,x1_3",
 call$1: function(x3) {
  return this.f_5.call$3(this.x1_3, this.x2_4, x3);
}
};

$$.ParserAccumulator4_operator$xor_anon = {"":"Closure;f_0",
 call$1: function(x1) {
  return new $.ParserAccumulator4_operator$xor__anon(x1, this.f_0);
}
};

$$.ParserAccumulator4_operator$xor__anon = {"":"Closure;x1_2,f_1",
 call$1: function(x2) {
  return new $.ParserAccumulator4_operator$xor___anon(this.x1_2, this.f_1, x2);
}
};

$$.ParserAccumulator4_operator$xor___anon = {"":"Closure;x1_5,f_4,x2_3",
 call$1: function(x3) {
  return new $.ParserAccumulator4_operator$xor____anon(this.x1_5, x3, this.f_4, this.x2_3);
}
};

$$.ParserAccumulator4_operator$xor____anon = {"":"Closure;x1_9,x3_8,f_7,x2_6",
 call$1: function(x4) {
  return this.f_7.call$4(this.x1_9, this.x2_6, this.x3_8, x4);
}
};

$$.ParserAccumulator5_operator$xor_anon = {"":"Closure;f_0",
 call$1: function(x1) {
  return new $.ParserAccumulator5_operator$xor__anon(this.f_0, x1);
}
};

$$.ParserAccumulator5_operator$xor__anon = {"":"Closure;f_2,x1_1",
 call$1: function(x2) {
  return new $.ParserAccumulator5_operator$xor___anon(this.f_2, x2, this.x1_1);
}
};

$$.ParserAccumulator5_operator$xor___anon = {"":"Closure;f_5,x2_4,x1_3",
 call$1: function(x3) {
  return new $.ParserAccumulator5_operator$xor____anon(x3, this.f_5, this.x2_4, this.x1_3);
}
};

$$.ParserAccumulator5_operator$xor____anon = {"":"Closure;x3_9,f_8,x2_7,x1_6",
 call$1: function(x4) {
  return new $.ParserAccumulator5_operator$xor_____anon(this.x3_9, this.f_8, this.x2_7, x4, this.x1_6);
}
};

$$.ParserAccumulator5_operator$xor_____anon = {"":"Closure;x3_14,f_13,x2_12,x4_11,x1_10",
 call$1: function(x5) {
  return this.f_13.call$5(this.x1_10, this.x2_12, this.x3_14, this.x4_11, x5);
}
};

$$.Parser_record_anon = {"":"Closure;this_0",
 call$2: function(s, pos) {
  var result = this.this_0._run$2(s, pos);
  if (result.get$isSuccess() === true)
    return $._success($.getInterceptor$JSString(s).substring$2(s, pos, result.get$position()), s, result.get$position(), result.get$expectations());
  else
    return result;
}
};

$$._AdtParsers_typeAppl_anon = {"":"Closure;",
 call$2: function(c, args) {
  return $.TypeAppl$(c, args);
}
};

$$._AdtParsers_operatorMethod_anon = {"":"Closure;",
 call$5: function(t, o, n, as, b) {
  return $.Method$($.getInterceptor$JSString(n).trim$0(n), $.S(t) + $.S(o) + $.S(n) + $.S(as) + $.S(b));
}
};

$$._AdtParsers_setMethod_anon = {"":"Closure;",
 call$4: function(s, n, a, b) {
  return $.Method$($.getInterceptor$JSString(n).trim$0(n), $.S(s) + $.S(n) + $.S(a) + $.S(b));
}
};

$$._AdtParsers_getMethod_anon = {"":"Closure;",
 call$4: function(t, g, n, b) {
  return $.Method$($.getInterceptor$JSString(n).trim$0(n), $.S(t) + $.S(g) + $.S(n) + $.S(b));
}
};

$$.LanguageParsers_identifier_anon = {"":"Closure;this_0",
 call$1: function(name$) {
  var t1 = this.this_0.get$_reservedNames();
  return $.getInterceptor$JSStringJSArray(t1).contains$1(t1, name$) === true ? $.get$fail() : $.pure(name$);
}
};

$$.LanguageParsers__ident_anon = {"":"Closure;",
 call$1: function(c) {
  return new $.LanguageParsers__ident__anon(c);
}
};

$$.LanguageParsers__ident__anon = {"":"Closure;c_0",
 call$1: function(cs) {
  return $._consStr(this.c_0).call$1($.Strings_concatAll(cs));
}
};

$$._consStr_anon = {"":"Closure;c_0",
 call$1: function(cs) {
  return $.S(this.c_0) + $.S(cs);
}
};

$$.anon1 = {"":"Closure;",
 call$2: function(s, pos) {
  return $._failure(s, pos, $);
}
};

$$.Parser_notAhead_anon = {"":"Closure;this_0",
 call$2: function(s, pos) {
  return this.this_0._run$2(s, pos).get$isSuccess() === true ? $._failure(s, pos, $) : $._success(null, s, pos, $);
}
};

$$._AdtParsers_def_anon = {"":"Closure;",
 call$5: function(_, c, vs, __, cs) {
  return $.DataTypeDefinition$(c, vs, cs);
}
};

$$._AdtParsers_constructor_anon = {"":"Closure;",
 call$2: function(c, ts) {
  return $.Constructor$(c, ts);
}
};

$$.oneOf_anon = {"":"Closure;chars_0",
 call$1: function(c) {
  var t1 = this.chars_0;
  return $.getInterceptor$JSStringJSArray(t1).contains$1(t1, c);
}
};

$$.LanguageParsers__oneLineComment_anon = {"":"Closure;",
 call$1: function(c) {
  return !$.eqB(c, "\n");
}
};

$$.choice_anon = {"":"Closure;ps_0",
 call$2: function(s, pos) {
  var exps, t1, res;
  exps = $.Expectations$($.Set_Set(), pos);
  for (t1 = this.ps_0, t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;) {
    res = t1.next$0()._run$2(s, pos);
    if (res.get$isSuccess() === true)
      return $._success(res.get$value(), res.get$text(), res.get$position(), exps.best$1(res.get$expectations()));
    else
      exps = exps.best$1(res.get$expectations());
  }
  return $._failure(s, pos, exps);
}
};

$$.Closure = {"":"Object;",
 toString$0: function() {
  return "Closure";
},
 is$Function: true
};

$$.BoundClosure = {'':
"Closure;self,target",
call$1: function(p0) { return this.self[this.target](p0); }
};
$$.BoundClosure0 = {'':
"Closure;self,target",
call$0: function() { return this.self[this.target](); }
};
$._AdtParsers$ = function() {
  var t1, t2;
  t1 = $.get$_reserved();
  t2 = new $._AdtParsers(null, null, null, null, null, null, null, null, null, null, $.or($.or($.or($.or($.or($.or($.or($.or($.or($.gt($.$char("a"), $.pure("a")), $.gt($.$char("b"), $.pure("\u0008"))), $.gt($.$char("f"), $.pure("\u000c"))), $.gt($.$char("n"), $.pure("\n"))), $.gt($.$char("r"), $.pure("\r"))), $.gt($.$char("t"), $.pure("\t"))), $.gt($.$char("v"), $.pure("\u000b"))), $.gt($.$char("\\"), $.pure("\\"))), $.gt($.$char("\""), $.pure("\""))), $.gt($.$char("'"), $.pure("'"))), $.makeLiteralMap(["0", 0, "1", 1, "2", 2, "3", 3, "4", 4, "5", 5, "6", 6, "7", 7, "8", 8, "9", 9, "a", 10, "b", 11, "c", 12, "d", 13, "e", 14, "f", 15, "A", 10, "B", 11, "C", 12, "D", 13, "E", 14, "F", 15]));
  t2.LanguageParsers$7$commentEnd$commentLine$commentStart$identLetter$identStart$nestedComments$reservedNames("*/", "//", "/*", null, null, true, t1);
  t2._AdtParsers$0();
  return t2;
};

$.add = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a + b : $.add$slow(a, b);
};

$.sub = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a - b : $.sub$slow(a, b);
};

$.mul = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a * b : $.mul$slow(a, b);
};

$.gt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b);
};

$.ge = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b);
};

$.lt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b);
};

$.gtB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b) === true;
};

$.geB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b) === true;
};

$.ltB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b) === true;
};

$.index = function(a, index) {
  var key;
  if (typeof a == "string" || a.constructor === Array) {
    key = index >>> 0;
    if (key === index && key < a.length)
      return a[key];
  }
  return $.index$slow(a, index);
};

$.indexSet = function(a, index, value) {
  var key;
  if (a.constructor === Array && !a.immutable$list) {
    key = index >>> 0;
    if (key === index && key < a.length) {
      a[key] = value;
      return;
    }
  }
  $.indexSet$slow(a, index, value);
};

$.checkNumbers = function(a, b) {
  if (typeof a === 'number')
    if (typeof b === 'number')
      return true;
    else
      throw $.$$throw($.ArgumentError$(b));
  return false;
};

$.isJsArray = function(value) {
  return !(value == null) && value.constructor === Array;
};

$.add$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a + b;
  return a.operator$add$1(b);
};

$.sub$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a - b;
  return a.operator$sub$1(b);
};

$.eq = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b);
  return a === b;
};

$.eqB = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b) === true;
  return a === b;
};

$.tdiv = function(a, b) {
  if ($.checkNumbers(a, b))
    return $.CTC1.truncate$0(a / b);
  return a.operator$tdiv$1(b);
};

$.gt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a > b;
  return a.operator$gt$1(b);
};

$.ge$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a >= b;
  return a.operator$ge$1(b);
};

$.lt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a < b;
  return a.operator$lt$1(b);
};

$.mul$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a * b;
  return a.operator$mul$1(b);
};

$.shr = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.ArgumentError$(b));
    if (a > 0) {
      if (b > 31)
        return 0;
      return a >>> b;
    }
    if (b > 31)
      b = 31;
    return (a >> b) >>> 0;
  }
  return a.operator$shr$1(b);
};

$.and = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a & b) >>> 0;
  return a.operator$and$1(b);
};

$.index$slow = function(a, index) {
  var t1;
  if (!(typeof a === 'string'))
    t1 = !(a == null) && a.constructor === Array;
  else
    t1 = true;
  if (t1) {
    if (!(typeof index === 'number' && Math.floor(index) === index)) {
      if (!(typeof index === 'number'))
        throw $.$$throw($.ArgumentError$(index));
      if (!($.CTC1.truncate$0(index) === index))
        throw $.$$throw($.ArgumentError$(index));
    }
    if ($.ltB(index, 0) || $.geB(index, $.getInterceptor$JSStringJSArray(a).get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    return a[index];
  }
  return a.operator$index$1(index);
};

$.indexSet$slow = function(a, index, value) {
  if (!(a == null) && a.constructor === Array) {
    if (!(typeof index === 'number' && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0 || $.geB(index, $.getInterceptor$JSStringJSArray(a).get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    $.checkMutable(a, "indexed set");
    a[index] = value;
    return;
  }
  a.operator$indexSet$2(index, value);
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.S = function(value) {
  var res = $.getInterceptor(value).toString$0(value);
  if (!(typeof res === 'string'))
    throw $.$$throw($.ArgumentError$(value));
  return res;
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.ioore = function(index) {
  throw $.$$throw($.RangeError$value(index));
};

$.checkNum = function(value) {
  if (!(typeof value === 'number'))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.ArgumentError$(null));
  return object;
};

$.checkString = function(value) {
  if (!(typeof value === 'string'))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.$$throw = function(ex) {
  var jsError;
  if (ex == null)
    ex = $.CTC;
  jsError = new Error();
  jsError.name = ex;
  jsError.description = ex;
  jsError.dartException = ex;
  jsError.toString = $.toStringWrapper.call$0;
  throw jsError;
};

$.toStringWrapper = function() {
  var t1 = this.dartException;
  return $.getInterceptor(t1).toString$0(t1);
};

$.unwrapException = function(ex) {
  var message, type, name$, ieErrorCode, ieFacilityNumber, t1;
  if ("dartException" in ex)
    return ex.dartException;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    name$ = ex.arguments ? ex.arguments[0] : "";
    if (message.indexOf("JSNull") !== -1 || $.eqB(type, "property_not_function") || $.eqB(type, "called_non_callable") || $.eqB(type, "non_object_property_call") || $.eqB(type, "non_object_property_load"))
      return $.NoSuchMethodError$(null, name$, [], $.makeLiteralMap([]), null);
    else if ($.eqB(type, "undefined_method"))
      return $.NoSuchMethodError$("", name$, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number>>16 & 0x1FFF;
    if (typeof message === 'string')
      if ($.CTC2.endsWith$1(message, "is null") === true || $.CTC2.endsWith$1(message, "is undefined") === true || $.CTC2.endsWith$1(message, "is null or undefined") === true)
        return $.NoSuchMethodError$(null, "<unknown>", [], $.makeLiteralMap([]), null);
      else {
        if (message.indexOf(" is not a function") === -1)
          t1 = ieErrorCode === 438 && ieFacilityNumber === 10;
        else
          t1 = true;
        if (t1)
          return $.NoSuchMethodError$("", "<unknown>", [], $.makeLiteralMap([]), null);
      }
    return $.Exception_Exception(typeof message === 'string' ? message : "");
  }
  if (ex instanceof RangeError) {
    if (typeof message === 'string' && message.indexOf("call stack") !== -1)
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === 'string' && message === "too much recursion")
      return $.StackOverflowError$();
  return ex;
};

$.getTraceFromException = function(exception) {
  return $.StackTrace$(exception.stack);
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator, result;
  iterator = $.CTC0.iterator$0(keyValuePairs);
  result = $.LinkedHashMap_LinkedHashMap();
  for (; iterator.get$hasNext() === true;)
    $.indexSet(result, iterator.next$0(), iterator.next$0());
  return result;
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  if ($.eqB(numberOfArguments, 0))
    return new $.invokeClosure_anon(closure).call$0();
  else if ($.eqB(numberOfArguments, 1))
    return new $.invokeClosure_anon0(closure, arg1).call$0();
  else if ($.eqB(numberOfArguments, 2))
    return new $.invokeClosure_anon1(arg2, closure, arg1).call$0();
  else
    throw $.$$throw($.Exception_Exception("Unsupported number of arguments for wrapped closure"));
};

$.convertDartClosureToJS = function(closure, arity) {
  var function$;
  if (closure == null)
    return;
  function$ = closure.$identity;
  if (!!function$)
    return function$;
  function$ = function() {
    return $.invokeClosure.call$5(closure, $, arity, arguments[0], arguments[1]);
  };
  closure.$identity = function$;
  return function$;
};

$.mod = function(a, b) {
  var result;
  if ($.checkNumbers(a, b)) {
    result = a % b;
    if (result === 0)
      return 0;
    if (result > 0)
      return result;
    if (b < 0)
      return result - b;
    else
      return result + b;
  }
  return a.operator$mod$1(b);
};

$.or = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a | b) >>> 0;
  return a.operator$or$1(b);
};

$.xor = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a ^ b) >>> 0;
  return a.operator$xor$1(b);
};

$.propertyTypeCastError = function(value, property) {
  var actualType, t1;
  actualType = $.Primitives_objectTypeName(value);
  t1 = $.getInterceptor$JSString(property);
  throw $.$$throw($.CastErrorImplementation$(actualType, t1.substring$2(property, 3, t1.get$length(property))));
};

$.propertyTypeCast = function(value, property) {
  if (value == null || !!value[property])
    return value;
  $.propertyTypeCastError(value, property);
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$("Cyclic initialization for static " + $.S(staticName)));
};

$.ReservedNames$_ = function(_map) {
  return new $.ReservedNames(_map);
};

$.typeNameInChrome = function(obj) {
  var name$ = obj.constructor.name;
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name$ === "WebKitMutationObserver")
    return "MutationObserver";
  if (name$ === "AudioChannelMerger")
    return "ChannelMergerNode";
  if (name$ === "AudioChannelSplitter")
    return "ChannelSplitterNode";
  if (name$ === "AudioGainNode")
    return "GainNode";
  if (name$ === "AudioPannerNode")
    return "PannerNode";
  if (name$ === "JavaScriptAudioNode")
    return "ScriptProcessorNode";
  if (name$ === "Oscillator")
    return "OscillatorNode";
  if (name$ === "RealtimeAnalyserNode")
    return "AnalyserNode";
  return name$;
};

$.typeNameInSafari = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name$ === "WebKitMutationObserver")
    return "MutationObserver";
  if (name$ === "AudioChannelMerger")
    return "ChannelMergerNode";
  if (name$ === "AudioChannelSplitter")
    return "ChannelSplitterNode";
  if (name$ === "AudioGainNode")
    return "GainNode";
  if (name$ === "AudioPannerNode")
    return "PannerNode";
  if (name$ === "JavaScriptAudioNode")
    return "ScriptProcessorNode";
  if (name$ === "Oscillator")
    return "OscillatorNode";
  if (name$ === "RealtimeAnalyserNode")
    return "AnalyserNode";
  return name$;
};

$.typeNameInIE = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "Document") {
    if (!!obj.xmlVersion)
      return "Document";
    return "HTMLDocument";
  }
  if (name$ === "ApplicationCache")
    return "DOMApplicationCache";
  if (name$ === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name$ === "DataTransfer")
    return "Clipboard";
  if (name$ === "DragEvent")
    return "MouseEvent";
  if (name$ === "HTMLDDElement")
    return "HTMLElement";
  if (name$ === "HTMLDTElement")
    return "HTMLElement";
  if (name$ === "HTMLTableDataCellElement")
    return "HTMLTableCellElement";
  if (name$ === "HTMLTableHeaderCellElement")
    return "HTMLTableCellElement";
  if (name$ === "HTMLPhraseElement")
    return "HTMLElement";
  if (name$ === "MSStyleCSSProperties")
    return "CSSStyleDeclaration";
  if (name$ === "MouseWheelEvent")
    return "WheelEvent";
  if (name$ === "Position")
    return "Geoposition";
  return name$;
};

$.constructorNameFallback = function(object) {
  var constructor$, name$, t1, string;
  if (object == null)
    return "Null";
  constructor$ = object.constructor;
  if (typeof(constructor$) === "function") {
    name$ = constructor$.name;
    if (typeof name$ === 'string')
      t1 = !(name$ === "") && !(name$ === "Object") && !(name$ === "Function.prototype");
    else
      t1 = false;
    if (t1)
      return name$;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.typeNameInFirefox = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "CSS2Properties")
    return "CSSStyleDeclaration";
  if (name$ === "DataTransfer")
    return "Clipboard";
  if (name$ === "DragEvent")
    return "MouseEvent";
  if (name$ === "GeoGeolocation")
    return "Geolocation";
  if (name$ === "MouseScrollEvent")
    return "WheelEvent";
  if (name$ === "OfflineResourceList")
    return "DOMApplicationCache";
  if (name$ === "WorkerMessageEvent")
    return "MessageEvent";
  if (name$ === "XMLDocument")
    return "Document";
  return name$;
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === "object"))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf("Chrome") !== -1 || userAgent.indexOf("DumpRenderTree") !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf("Firefox") !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf("MSIE") !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf("Opera") !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf("AppleWebKit") !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property,
      {value: value, enumerable: false, writable: true, configurable: true});
};

$.toStringForNativeObject = function(obj) {
  return "Instance of " + $.getTypeNameOf(obj);
};

$.dynamicFunction = function(name$) {
  var f, methods, dartMethod, bind;
  f = Object.prototype[name$];
  if (!(f == null) && !!f.methods)
    return f.methods;
  methods = {};
  dartMethod = Object.getPrototypeOf($.CTC6)[name$];
  if (!(dartMethod == null))
    methods["Object"] = dartMethod;
  bind = function() {return $.dynamicBind.call$4(this, name$, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, name$, bind);
  return methods;
};

$.typeNameInOpera = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  return name$;
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === "undefined") {
    var t1 = [];
    $._dynamicMetadata(t1);
  }
  return $dynamicMetadata;
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.Element_Element$html = function(html) {
  return $._ElementFactoryProvider_createElement_html(html);
};

$.Element_Element$tag = function(tag) {
  return document.createElement(tag);
};

$.regExpExec = function(regExp, str) {
  var result = $.regExpGetNative(regExp).exec(str);
  if (result == null)
    return;
  return result;
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$.buildDynamicMetadata = function(inputTable) {
  var result, i, tag, tags, set, tagNames, j;
  result = [];
  for (i = 0; i < inputTable.length; ++i) {
    tag = inputTable[i][0];
    tags = inputTable[i][1];
    set = {};
    tagNames = tags.split("|");
    for (j = 0; j < tagNames.length; ++j)
      set[tagNames[j]] = true;
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.regExpMakeNative = function(regExp, global, exception) {
  var pattern, multiLine, ignoreCase, sb, t1, t2, e;
  pattern = regExp.get$pattern();
  multiLine = regExp.get$multiLine();
  ignoreCase = regExp.get$ignoreCase();
  $.checkString(pattern);
  sb = $.StringBuffer_StringBuffer("");
  if (multiLine === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "m");
  }
  if (ignoreCase === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "i");
  }
  if (global === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "g");
  }
  try {
    t1 = pattern;
    t2 = sb;
    t1 = new RegExp(t1, $.getInterceptor(t2).toString$0(t2));
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.dynamicBind = function(obj, name$, methods, arguments$) {
  var tag, method, i, entry, proto;
  tag = $.getTypeNameOf(obj);
  method = methods[tag];
  if (method == null && !($._dynamicMetadata0() == null))
    for (i = 0; i < $._dynamicMetadata0().length; ++i) {
      entry = $._dynamicMetadata0()[i];
      if (entry.get$_set()[tag]) {
        method = methods[entry.get$_tag()];
        if (!(method == null))
          break;
      }
    }
  if (method == null)
    method = methods["Object"];
  proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError(name$ + " is not a function");} else {return Object.prototype[name$].apply(this, arguments);}};
  if (!proto.hasOwnProperty(name$))
    $.defineProperty(proto, name$, method);
  return method.apply(obj, arguments$);
};

$.WatchEvent$ = function(oldValue, newValue) {
  return new $.WatchEvent(oldValue, newValue);
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result, t1, length$, patternLength, startIndex, position, endIndex;
  result = $.List_List(null);
  t1 = $.getInterceptor$JSStringJSArray(haystack);
  length$ = t1.get$length(haystack);
  patternLength = needle.length;
  for (startIndex = 0; true;) {
    position = t1.indexOf$2(haystack, needle, startIndex);
    if ($.eqB(position, -1))
      break;
    result.push($.StringMatch$(position, haystack, needle));
    endIndex = $.add(position, patternLength);
    if ($.eqB(endIndex, length$))
      break;
    else
      startIndex = $.eqB(position, endIndex) ? $.add(startIndex, 1) : endIndex;
  }
  return result;
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  var result, length$, t1, i;
  if (from === "")
    if (receiver === "")
      return to;
    else {
      result = $.StringBuffer_StringBuffer("");
      length$ = receiver.length;
      t1 = $.getInterceptor$JSArray(result);
      t1.add$1(result, to);
      for (i = 0; i < length$; ++i) {
        if (i >= receiver.length)
          throw $.ioore(i);
        t1.add$1(result, receiver[i]);
        t1.add$1(result, to);
      }
      return t1.toString$0(result);
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.get$quoteRegExp(), true), "\\$&"), false, false), true), to);
};

$.stringJoinUnchecked = function(array, separator) {
  return array.join(separator);
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  var substr, t1;
  if (typeof other === 'string')
    return !$.eqB($.CTC2.indexOf$2(receiver, other, startIndex), -1);
  else if (typeof other === 'object' && other !== null && !!other.is$JSSyntaxRegExp)
    return other.hasMatch$1($.CTC2.substring$1(receiver, startIndex));
  else {
    substr = $.CTC2.substring$1(receiver, startIndex);
    t1 = $.getInterceptor$JSString(other).allMatches$1(other, substr);
    return $.getInterceptor$JSArray(t1).iterator$0(t1).get$hasNext();
  }
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.Expectations$ = function(expected, position) {
  return new $.Expectations(expected, position);
};

$._ListWatcher$ = function(getter, callback, debugName) {
  var t1 = new $._ListWatcher(debugName, getter, callback, null);
  t1._Watcher$3(getter, callback, debugName);
  t1._ListWatcher$3(getter, callback, debugName);
  return t1;
};

$._Watcher$ = function(_getter, _callback, debugName) {
  var t1 = new $._Watcher(debugName, _getter, _callback, null);
  t1._Watcher$3(_getter, _callback, debugName);
  return t1;
};

$.ParserAccumulator2$ = function(p1, p2) {
  return new $.ParserAccumulator2(p1, p2);
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.Error_safeToString = function(object) {
  var t1;
  if (typeof object === 'number' && Math.floor(object) === object || typeof object === 'number' || typeof object === 'boolean' || null == object)
    return $.getInterceptor(object).toString$0(object);
  if (typeof object === 'string') {
    t1 = $.CTC2.replaceAll$2(object, "\\", "\\\\");
    t1 = $.getInterceptor$JSString(t1).replaceAll$2(t1, "\n", "\\n");
    t1 = $.getInterceptor$JSString(t1).replaceAll$2(t1, "\r", "\\r");
    return "\"" + $.S($.getInterceptor$JSString(t1).replaceAll$2(t1, "\"", "\\\"")) + "\"";
  }
  return $.Primitives_objectToString(object);
};

$.RangeError$value = function(value) {
  return new $.RangeError("value " + $.S(value));
};

$.print = function(object) {
  $.Primitives_printString(object);
};

$.Arrays_copy = function(src, srcStart, dst, dstStart, count) {
  var i, j, t1, t2, t3;
  if (typeof dst !== 'object' || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !dst.is$JavaScriptIndexingBehavior())
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1, t1 = src.length, t2 = dst.length; i >= srcStart; --i, --j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
  else
    for (t1 = src.length, t2 = dst.length, j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.UnsupportedError$ = function(message) {
  return new $.UnsupportedError(message);
};

$.Lists_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof startIndex !== 'number')
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== 'number')
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.Lists_getRange = function(a, start, length$, accumulator) {
  var end, i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Lists_getRange$bailout(1, a, start, length$, accumulator);
  if (typeof start !== 'number')
    return $.Lists_getRange$bailout(1, a, start, length$, accumulator);
  if ($.ltB(length$, 0))
    throw $.$$throw($.ArgumentError$("length"));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  if (typeof length$ !== 'number')
    throw $.iae(length$);
  end = start + length$;
  if (end > a.length)
    throw $.$$throw($.RangeError$value(end));
  for (i = start; i < end; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    accumulator.push(a[i]);
  }
  return accumulator;
};

$.StateError$ = function(message) {
  return new $.StateError(message);
};

$.FixedSizeListIterator$ = function(array) {
  return new $.FixedSizeListIterator($.getInterceptor$JSStringJSArray(array).get$length(array), array, 0);
};

$.ParserAccumulator3$ = function(p1, p2, p3) {
  return new $.ParserAccumulator3(p1, p2, p3);
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.add($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.Primitives_printString = function(string) {
  if ("\nThis program is using an experimental feature called \"mirrors\".  As\ncurrently implemented, mirrors do not work with minification, and will\ncause spurious errors depending on how code was optimized.\n\nThe authors of this program are aware of these problems and have\ndecided the thrill of using an experimental feature is outweighing the\nrisks.  Furthermore, the authors of this program understand that\nlong-term, to fix the problems mentioned above, mirrors may have\nnegative impact on size and performance of Dart programs compiled to\nJavaScript.\n" === string)
    $.Primitives_mirrorsEnabled = true;
  else if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw 'Unable to print message: ' + String(string);
};

$.Primitives_objectTypeName = function(object) {
  var name$, decompiled, t1;
  name$ = $.constructorNameFallback(object);
  if ($.eqB(name$, "Object")) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === 'string')
      name$ = decompiled;
  }
  t1 = $.getInterceptor$JSString(name$);
  return t1.charCodeAt$1(name$, 0) === 36 ? t1.substring$1(name$, 1) : name$;
};

$.Primitives_objectToString = function(object) {
  return "Instance of '" + $.S($.Primitives_objectTypeName(object)) + "'";
};

$.Primitives_newList = function(length$) {
  var result;
  if (length$ == null)
    return new Array();
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$) || length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  result = new Array(length$);
  result.fixed$length = true;
  return result;
};

$.ParserAccumulator4$ = function(p1, p2, p3, p4) {
  return new $.ParserAccumulator4(p1, p2, p3, p4);
};

$.main0 = function() {
  $.main();
  $.init_autogenerated();
};

$.ParserAccumulator5$ = function(p1, p2, p3, p4, p5) {
  return new $.ParserAccumulator5(p1, p2, p3, p4, p5);
};

$.generated = function() {
  var parseResult, t1, t2, t3, t4, t5, t6, t7, config;
  parseResult = $.get$moduleParser().run$1($.input);
  if (parseResult.get$isSuccess() === true) {
    t1 = $.finalFields;
    t2 = $.isGetters;
    t3 = $.asGetters;
    t4 = $.withMethod;
    t5 = $.equality;
    t6 = $.toStringMethod;
    t7 = $.visitor;
    config = $.Configuration$(t3, false, t5, true, t1, true, true, t2, $.matchMethod, false, true, t6, t7, t4);
    return $.generate(parseResult.get$value(), config);
  } else
    return "Parse Error: " + $.S(parseResult.get$errorMessage());
};

$.main = function() {
};

$.init_autogenerated = function() {
  var t1, _root, __left, __stoppers2, __generated, t2, __listener__def_input_1, __listener__e0_change_3, __listener__e1_change_4, __listener__e2_change_5, __listener__e3_change_6, __listener__e4_change_7, __listener__e5_change_8, __listener__e6_change_9, __listener__e7_change_10;
  t1 = {};
  _root = $.document().get$body();
  t1.__def_1 = null;
  t1.__e0_2 = null;
  t1.__e1_3 = null;
  t1.__e2_4 = null;
  t1.__e3_5 = null;
  t1.__e4_6 = null;
  t1.__e5_7 = null;
  t1.__e6_8 = null;
  t1.__e7_9 = null;
  t1.__binding8_10 = null;
  __left = _root.query$1("#left");
  t1.__def_1 = __left.query$1("#def");
  __stoppers2 = [];
  t1.__e0_2 = __left.query$1("#__e-0");
  t1.__e1_3 = __left.query$1("#__e-1");
  t1.__e2_4 = __left.query$1("#__e-2");
  t1.__e3_5 = __left.query$1("#__e-3");
  t1.__e4_6 = __left.query$1("#__e-4");
  t1.__e5_7 = __left.query$1("#__e-5");
  t1.__e6_8 = __left.query$1("#__e-6");
  t1.__e7_9 = __left.query$1("#__e-7");
  __generated = _root.query$1("#right").query$1("#generated");
  t1.__binding8_10 = $.Text_Text("");
  t2 = __generated.get$nodes();
  $.getInterceptor$JSArray(t2).add$1(t2, t1.__binding8_10);
  t2 = __generated.get$nodes();
  $.getInterceptor$JSArray(t2).add$1(t2, $.Text_Text("\n    "));
  __listener__def_input_1 = new $.init_autogenerated_anon(t1);
  t2 = t1.__def_1.get$on().get$input();
  $.getInterceptor$JSArray(t2).add$1(t2, __listener__def_input_1);
  __stoppers2.push($.watchAndInvoke(new $.init_autogenerated_anon0(), new $.init_autogenerated_anon1(t1), null));
  __listener__e0_change_3 = new $.init_autogenerated_anon2(t1);
  t2 = t1.__e0_2.get$on().get$change();
  $.getInterceptor$JSArray(t2).add$1(t2, __listener__e0_change_3);
  __stoppers2.push($.watchAndInvoke(new $.init_autogenerated_anon3(), new $.init_autogenerated_anon4(t1), null));
  __listener__e1_change_4 = new $.init_autogenerated_anon5(t1);
  t2 = t1.__e1_3.get$on().get$change();
  $.getInterceptor$JSArray(t2).add$1(t2, __listener__e1_change_4);
  __stoppers2.push($.watchAndInvoke(new $.init_autogenerated_anon6(), new $.init_autogenerated_anon7(t1), null));
  __listener__e2_change_5 = new $.init_autogenerated_anon8(t1);
  t2 = t1.__e2_4.get$on().get$change();
  $.getInterceptor$JSArray(t2).add$1(t2, __listener__e2_change_5);
  __stoppers2.push($.watchAndInvoke(new $.init_autogenerated_anon9(), new $.init_autogenerated_anon10(t1), null));
  __listener__e3_change_6 = new $.init_autogenerated_anon11(t1);
  t2 = t1.__e3_5.get$on().get$change();
  $.getInterceptor$JSArray(t2).add$1(t2, __listener__e3_change_6);
  __stoppers2.push($.watchAndInvoke(new $.init_autogenerated_anon12(), new $.init_autogenerated_anon13(t1), null));
  __listener__e4_change_7 = new $.init_autogenerated_anon14(t1);
  t2 = t1.__e4_6.get$on().get$change();
  $.getInterceptor$JSArray(t2).add$1(t2, __listener__e4_change_7);
  __stoppers2.push($.watchAndInvoke(new $.init_autogenerated_anon15(), new $.init_autogenerated_anon16(t1), null));
  __listener__e5_change_8 = new $.init_autogenerated_anon17(t1);
  t2 = t1.__e5_7.get$on().get$change();
  $.getInterceptor$JSArray(t2).add$1(t2, __listener__e5_change_8);
  __stoppers2.push($.watchAndInvoke(new $.init_autogenerated_anon18(), new $.init_autogenerated_anon19(t1), null));
  __listener__e6_change_9 = new $.init_autogenerated_anon20(t1);
  t2 = t1.__e6_8.get$on().get$change();
  $.getInterceptor$JSArray(t2).add$1(t2, __listener__e6_change_9);
  __stoppers2.push($.watchAndInvoke(new $.init_autogenerated_anon21(), new $.init_autogenerated_anon22(t1), null));
  __listener__e7_change_10 = new $.init_autogenerated_anon23(t1);
  t2 = t1.__e7_9.get$on().get$change();
  $.getInterceptor$JSArray(t2).add$1(t2, __listener__e7_change_10);
  __stoppers2.push($.watchAndInvoke(new $.init_autogenerated_anon24(), new $.init_autogenerated_anon25(t1), null));
  __stoppers2.push($.watchAndInvoke(new $.init_autogenerated_anon26(), new $.init_autogenerated_anon27(t1), null));
};

$.window = function() {
  return window;
};

$.document = function() {
  return document;
};

$._ChildrenElementList$_wrap = function(element) {
  return new $._ChildrenElementList(element, element.get$$$dom_children());
};

$._browserPrefix = function() {
  if ($._cachedBrowserPrefix == null)
    if ($._Device_isFirefox() === true)
      $._cachedBrowserPrefix = "-moz-";
    else if ($._Device_isIE() === true)
      $._cachedBrowserPrefix = "-ms-";
    else if ($._Device_isOpera() === true)
      $._cachedBrowserPrefix = "-o-";
    else
      $._cachedBrowserPrefix = "-webkit-";
  return $._cachedBrowserPrefix;
};

$.ListIterator$ = function(list) {
  return new $.ListIterator(0, list);
};

$.Method$ = function(name$, text) {
  return new $.Method(name$, text);
};

$._FrozenElementList$_wrap = function(_nodeList) {
  return new $._FrozenElementList(_nodeList);
};

$.Parameter$ = function(type, name$) {
  return new $.Parameter(name$, type);
};

$.TypeAppl$ = function(name$, arguments$) {
  return new $.TypeAppl(name$, arguments$);
};

$.Events$ = function(_ptr) {
  return new $.Events(_ptr);
};

$.Text_Text = function(data) {
  return document.createTextNode(data);
};

$._FrozenElementListIterator$ = function(_list) {
  return new $._FrozenElementListIterator(_list, 0);
};

$.UnimplementedError$ = function(message) {
  return new $.UnimplementedError(message);
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$._ChildNodeListLazy$ = function(_this) {
  return new $._ChildNodeListLazy(_this);
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp__globalVersionOf(re), _str, null, false);
};

$.StringBuffer_StringBuffer = function(content$) {
  return $._StringBufferImpl$(content$);
};

$.IllegalJSRegExpException$ = function(_pattern, _errmsg) {
  return new $.IllegalJSRegExpException(_pattern, _errmsg);
};

$.Exception_Exception = function(message) {
  return $._ExceptionImplementation$(message);
};

$._StringBufferImpl$ = function(content$) {
  var t1 = new $._StringBufferImpl(null, null);
  t1._StringBufferImpl$1(content$);
  return t1;
};

$._AttributeClassSet$ = function(_element) {
  return new $._AttributeClassSet(_element);
};

$.Strings_join = function(strings, separator) {
  $.checkNull(strings);
  return $.stringJoinUnchecked($.Strings__toJsStringArray(strings), separator);
};

$.Strings__toJsStringArray = function(strings) {
  var length$, i, string, array;
  if (typeof strings !== 'string' && (typeof strings !== 'object' || strings === null || strings.constructor !== Array && !strings.is$JavaScriptIndexingBehavior()))
    return $.Strings__toJsStringArray$bailout(1, strings);
  $.checkNull(strings);
  length$ = strings.length;
  if ($.isJsArray(strings)) {
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    array = strings;
  } else {
    array = $.List_List(length$);
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      array[i] = string;
    }
  }
  return array;
};

$.Strings_concatAll = function(strings) {
  return $.stringJoinUnchecked($.Strings__toJsStringArray(strings), "");
};

$.Set_Set = function() {
  return $._HashSetImpl$();
};

$.Set_Set$from = function(other) {
  return $._HashSetImpl__HashSetImpl$from(other);
};

$._MatchImplementation$ = function(pattern, str, start, end, _groups) {
  return new $._MatchImplementation(pattern, str, start, end, _groups);
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$.Configuration$ = function(asGetters, enumerator, equality, extractor, finalFields, fromJson, fromString, isGetters, matchMethod, parser, toJson, toStringMethod, visitor, withMethod) {
  return new $.Configuration(finalFields, isGetters, asGetters, withMethod, equality, toStringMethod, fromString, parser, enumerator, visitor, matchMethod, extractor, toJson, fromJson);
};

$.ElementEvents$ = function(_ptr) {
  return new $.ElementEvents(_ptr);
};

$.NoSuchMethodError$ = function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
};

$.Parser$ = function(f) {
  return new $.Parser(f);
};

$.Module$ = function(adts, classes) {
  return new $.Module(adts, classes);
};

$.ParseResult$success = function(value, text, position, expectations) {
  return new $.ParseResult(true, value, text, position, expectations);
};

$.ParseResult$failure = function(text, position, expectations) {
  return new $.ParseResult(false, null, text, position, expectations);
};

$.CastErrorImplementation$ = function(actualType, expectedType) {
  return new $.CastErrorImplementation(actualType, expectedType);
};

$.DataTypeDefinition$ = function(name$, variables, constructors) {
  return new $.DataTypeDefinition(name$, variables, constructors);
};

$.Class$ = function(name$, methods) {
  var t1 = new $.Class(name$, null);
  t1.Class$2(name$, methods);
  return t1;
};

$.Constructor$ = function(name$, parameters) {
  return new $.Constructor(name$, parameters);
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$.StackOverflowError$ = function() {
  return new $.StackOverflowError();
};

$._ExceptionImplementation$ = function(message) {
  return new $._ExceptionImplementation(message);
};

$._ElementFactoryProvider_createElement_html = function(html) {
  var match, t1, tag, parentTag, temp, element, t2;
  match = $.get$_START_TAG_REGEXP().firstMatch$1(html);
  if (!(match == null)) {
    t1 = match.group$1(1);
    tag = $.getInterceptor$JSString(t1).toLowerCase$0(t1);
    parentTag = $.CTC5.containsKey$1(tag) === true ? $.CTC5.operator$index$1(tag) : "div";
  } else {
    tag = null;
    parentTag = "div";
  }
  temp = $.Element_Element$tag(parentTag);
  temp.set$innerHtml(html);
  t1 = temp.get$children();
  if ($.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 1))
    element = $.index(temp.get$children(), 0);
  else {
    if ($.eqB(parentTag, "html")) {
      t1 = temp.get$children();
      t2 = $.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 2);
      t1 = t2;
    } else
      t1 = false;
    if (t1) {
      t1 = temp.get$children();
      element = $.index(t1, $.eqB(tag, "head") ? 0 : 1);
    } else {
      t1 = temp.get$children();
      throw $.$$throw($.ArgumentError$("HTML had " + $.S($.getInterceptor$JSStringJSArray(t1).get$length(t1)) + " " + "top level elements but 1 expected"));
    }
  }
  element.remove$0();
  return element;
};

$.FilteredElementList$ = function(node) {
  return new $.FilteredElementList(node, node.get$nodes());
};

$.FrameSetElementEvents$ = function(_ptr) {
  return new $.FrameSetElementEvents(_ptr);
};

$.DocumentEvents$ = function(_ptr) {
  return new $.DocumentEvents(_ptr);
};

$.Collections_contains = function(iterable, element) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(iterable).iterator$0(iterable); t1.get$hasNext() === true;)
    if ($.eqB(element, t1.next$0()))
      return true;
  return false;
};

$.Collections_forEach = function(iterable, f) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(iterable).iterator$0(iterable); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
};

$.Collections_map = function(source, destination, f) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(source).iterator$0(source); t1.get$hasNext() === true;)
    destination.push(f.call$1(t1.next$0()));
  return destination;
};

$.Collections_filter = function(source, destination, f) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(source).iterator$0(source); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (f.call$1(t2) === true)
      destination.push(t2);
  }
  return destination;
};

$.Collections_collectionToString = function(c) {
  var result = $.StringBuffer_StringBuffer("");
  $.Collections__emitCollection(c, result, $.List_List(null));
  return $.getInterceptor(result).toString$0(result);
};

$.Collections__emitCollection = function(c, result, visiting) {
  var t1, isList, t2, t3, first, t4;
  t1 = $.getInterceptor$JSArray(visiting);
  t1.add$1(visiting, c);
  isList = typeof c === 'object' && c !== null && (c.constructor === Array || c.is$List());
  t2 = $.getInterceptor$JSArray(result);
  t2.add$1(result, isList ? "[" : "{");
  for (t3 = $.getInterceptor$JSArray(c).iterator$0(c), first = true; t3.get$hasNext() === true; first = false) {
    t4 = t3.next$0();
    if (!first)
      t2.add$1(result, ", ");
    $.Collections__emitObject(t4, result, visiting);
  }
  t2.add$1(result, isList ? "]" : "}");
  t1.removeLast$0(visiting);
};

$.Collections__emitObject = function(o, result, visiting) {
  var t1;
  if (typeof o === 'object' && o !== null && (o.constructor === Array || o.is$Collection()))
    if ($.Collections__containsRef(visiting, o)) {
      t1 = $.getInterceptor$JSArray(result);
      t1.add$1(result, typeof o === 'object' && o !== null && (o.constructor === Array || o.is$List()) ? "[...]" : "{...}");
    } else
      $.Collections__emitCollection(o, result, visiting);
  else if (typeof o === 'object' && o !== null && o.is$Map())
    if ($.Collections__containsRef(visiting, o))
      $.getInterceptor$JSArray(result).add$1(result, "{...}");
    else
      $.Maps__emitMap(o, result, visiting);
  else
    $.getInterceptor$JSArray(result).add$1(result, o);
};

$.Collections__containsRef = function(c, ref) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(c).iterator$0(c); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$._Device_userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$._Device_isOpera = function() {
  var t1 = $._Device_userAgent();
  return $.getInterceptor$JSString(t1).contains$2(t1, "Opera", 0);
};

$._Device_isIE = function() {
  var t1, t2;
  if ($._Device_isOpera() !== true) {
    t1 = $._Device_userAgent();
    t2 = $.getInterceptor$JSString(t1).contains$2(t1, "MSIE", 0) === true;
    t1 = t2;
  } else
    t1 = false;
  return t1;
};

$._Device_isFirefox = function() {
  var t1 = $._Device_userAgent();
  return $.getInterceptor$JSString(t1).contains$2(t1, "Firefox", 0);
};

$.LinkedHashMap_LinkedHashMap = function() {
  return $._LinkedHashMapImpl$();
};

$.JSSyntaxRegExp$ = function(pattern, ignoreCase, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, ignoreCase);
};

$._LinkedHashMapImpl$ = function() {
  var t1 = new $._LinkedHashMapImpl(null, null);
  t1._LinkedHashMapImpl$0();
  return t1;
};

$.JSSyntaxRegExp__globalVersionOf = function(other) {
  var t1, t2, re;
  t1 = other.get$pattern();
  t2 = other.get$multiLine();
  re = $.JSSyntaxRegExp$(t1, other.get$ignoreCase(), t2);
  re._re = $.regExpMakeNative(re, true);
  return re;
};

$.RegExp_RegExp = function(pattern, ignoreCase, multiLine) {
  return $.JSSyntaxRegExp$(pattern, ignoreCase, multiLine);
};

$.watchAndInvoke = function(exp, callback, debugName) {
  var res = $.watch(exp, callback, debugName);
  if (typeof exp === 'function' || typeof exp === 'object' && exp !== null && !!exp.is$Function)
    callback.call$1($.WatchEvent$(null, exp.call$0()));
  else
    callback.call$1($.WatchEvent$(null, exp));
  return res;
};

$.watch = function(target, callback, debugName, exception) {
  var isList, t1, exp, e, trace, watcher;
  if (callback == null)
    return new $.watch_anon();
  if ($._watchers == null)
    $._watchers = [];
  isList = false;
  t1 = target;
  if (typeof t1 === 'object' && t1 !== null && !!t1.is$Handle)
    exp = $.propertyTypeCast(target, 'is$Handle').get$_getter();
  else {
    t1 = target;
    if (typeof t1 === 'function' || typeof t1 === 'object' && t1 !== null && !!t1.is$Function) {
      exp = target;
      try {
        t1 = target.call$0();
        isList = typeof t1 === 'object' && t1 !== null && (t1.constructor === Array || t1.is$List());
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        trace = $.getTraceFromException(exception);
        $.print("error: evaluating " + $.S(!(debugName == null) ? debugName : "<unnamed>") + " " + "watcher threw error (" + $.S(e) + ", " + $.S(trace) + ")");
      }

    } else {
      t1 = target;
      if (typeof t1 === 'object' && t1 !== null && (t1.constructor === Array || t1.is$List())) {
        exp = new $.watch_anon0(target);
        isList = true;
      } else
        exp = null;
    }
  }
  watcher = isList === true ? $._ListWatcher$(exp, callback, debugName) : $._Watcher$(exp, callback, debugName);
  t1 = $._watchers;
  $.getInterceptor$JSArray(t1).add$1(t1, watcher);
  return new $.watch_anon1(watcher);
};

$._unregister = function(watcher) {
  var t1, index;
  t1 = $._watchers;
  index = $.getInterceptor$JSStringJSArray(t1).indexOf$1(t1, watcher);
  if (!$.eqB(index, -1)) {
    t1 = $._watchers;
    $.getInterceptor$JSArray(t1).removeRange$2(t1, index, 1);
  }
};

$.dispatch = function() {
  var total, t1, dirty, total0;
  if ($._watchers == null)
    return;
  total = 0;
  do {
    for (t1 = $._watchers, t1 = $.getInterceptor$JSArray(t1).iterator$0(t1), dirty = false; t1.get$hasNext() === true;)
      if (t1.next$0().compareAndNotify$0() === true)
        dirty = true;
    if (dirty) {
      total0 = total + 1;
      t1 = total < 10;
      total = total0;
    } else
      t1 = false;
  } while (t1);
  if (total === 10)
    $.print("Possible loop in watchers propagation, stopped dispatch.");
};

$._ElementAttributeMap$ = function(element) {
  return new $._ElementAttributeMap(element);
};

$.DoubleLinkedQueue$ = function() {
  var t1 = new $.DoubleLinkedQueue(null);
  t1.DoubleLinkedQueue$0();
  return t1;
};

$.updateBinding = function(value, node, stringValue) {
  var isSafeHtml, node0;
  isSafeHtml = typeof value === 'object' && value !== null && !!value.is$SafeHtml;
  if (stringValue == null)
    stringValue = $.getInterceptor(value).toString$0(value);
  if (!isSafeHtml && typeof node === 'object' && node !== null && node.is$Text())
    node.set$text(stringValue);
  else {
    node0 = isSafeHtml ? $.Element_Element$html(stringValue) : $.Text_Text(stringValue);
    node.replaceWith$1(node0);
    node = node0;
  }
  return node;
};

$.StringMatch$ = function(start, str, pattern) {
  return new $.StringMatch(start, str, pattern);
};

$.InputElementEvents$ = function(_ptr) {
  return new $.InputElementEvents(_ptr);
};

$.Queue_Queue = function() {
  return $.DoubleLinkedQueue$();
};

$._toString = function(x) {
  return $.getInterceptor(x).toString$0(x);
};

$._KeyValuePair$ = function(key, value) {
  return new $._KeyValuePair(key, value);
};

$.DoubleLinkedQueueEntry$ = function(e) {
  var t1 = new $.DoubleLinkedQueueEntry(null, null, null);
  t1.DoubleLinkedQueueEntry$1(e);
  return t1;
};

$._consStr = function(c) {
  return new $._consStr_anon(c);
};

$._humanOr = function(es) {
  var t1, result, i, t2, t3, t4, t5, t6;
  t1 = es.length;
  if (t1 === 1) {
    if (0 >= t1)
      throw $.ioore(0);
    return es[0];
  } else {
    result = $.StringBuffer_StringBuffer("");
    for (t1 = $.getInterceptor$JSArray(result), i = 0; t2 = es.length, t3 = t2 - 2, i < t3; ++i)
      t1.add$1(result, $.S(es[i]) + ", ");
    if (t3 < 0)
      throw $.ioore(t3);
    t4 = $.S(es[t3]) + " or ";
    t5 = es.length;
    t6 = t5 - 1;
    if (t6 < 0)
      throw $.ioore(t6);
    t1.add$1(result, t4 + $.S(es[t6]));
    return result;
  }
};

$._success = function(value, text, position, expectations) {
  var t1 = $ === expectations;
  if (t1)
    expectations = null;
  return $.ParseResult$success(value, text, position, !t1 ? expectations : $.Expectations$($.Set_Set(), position));
};

$.pure = function(value) {
  return $.Parser$(new $.pure_anon(value));
};

$._HashSetImpl$ = function() {
  var t1 = new $._HashSetImpl(null);
  t1._HashSetImpl$0();
  return t1;
};

$.$char = function(chr) {
  return $.pred(new $.char_anon(chr)).operator$mod$1("'" + chr + "'");
};

$.rec = function(f) {
  return $.Parser$(new $.rec_anon(f));
};

$.pred = function(p) {
  return $.Parser$(new $.pred_anon(p));
};

$._failure = function(text, position, expectations) {
  var t1 = $ === expectations;
  if (t1)
    expectations = null;
  return $.ParseResult$failure(text, position, !t1 ? expectations : $.Expectations$($.Set_Set(), position));
};

$.choice = function(ps) {
  return $.Parser$(new $.choice_anon(ps));
};

$.oneOf = function(chars) {
  return $.pred(new $.oneOf_anon(chars)).expecting$1("one of '" + $.S(chars) + "'");
};

$.noneOf = function(chars) {
  return $.pred(new $.noneOf_anon(chars)).expecting$1("none of '" + chars + "'");
};

$._HashSetImpl__HashSetImpl$from = function(other) {
  var set, t1;
  set = $._HashSetImpl$();
  for (t1 = $.getInterceptor$JSArray(other).iterator$0(other); t1.get$hasNext() === true;)
    set.add$1(t1.next$0());
  return set;
};

$.string = function(str) {
  return $.Parser$(new $.string_anon(str));
};

$._DoubleLinkedQueueIterator$ = function(_sentinel) {
  var t1 = new $._DoubleLinkedQueueIterator(_sentinel, null);
  t1._DoubleLinkedQueueIterator$1(_sentinel);
  return t1;
};

$._DoubleLinkedQueueEntrySentinel$ = function() {
  var t1 = new $._DoubleLinkedQueueEntrySentinel(null, null, null);
  t1.DoubleLinkedQueueEntry$1(null);
  t1._DoubleLinkedQueueEntrySentinel$0();
  return t1;
};

$._typeArgs = function(args, extraArg) {
  if (!(extraArg == null)) {
    args = $.List_List$from(args);
    $.CTC0.add$1(args, extraArg);
  }
  return $.getInterceptor$JSStringJSArray(args).get$isEmpty(args) === true ? "" : "<" + $.Strings_join(args, ", ") + ">";
};

$._generate = function(config, buffer, defs, classes) {
  var classMap, t1, t2, t3, t4;
  classMap = $.makeLiteralMap([]);
  for (t1 = $.getInterceptor$JSArray(classes).iterator$0(classes); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    $.indexSet(classMap, t2.get$name(), t2);
  }
  t1 = new $._generate_overriden(classMap);
  t2 = new $._generate_write(buffer);
  t3 = new $._generate_writeLn(t2);
  t4 = new $._generate_generateMatchMethodPrefix(t2);
  t2 = new $._generate_generateConstructorClass(classMap, t4, t3, config, t2, t1);
  t4 = new $._generate_generateSuperClass(config, classMap, t4, t3, t1);
  t4 = new $._generate_generateDefinition(config, new $._generate_generateVisitorClass(classMap, t1, t3), t2, t4, t3);
  new $._generate_generateImports(config, t3).call$0();
  for (t1 = $.getInterceptor$JSArray(defs).iterator$0(defs); t1.get$hasNext() === true;) {
    t4.call$1(t1.next$0());
    t3.call$1("");
  }
};

$.generate = function(module, configuration) {
  var buffer = $.StringBuffer_StringBuffer("");
  $._generate(configuration, buffer, module.get$adts(), module.get$classes());
  return $.getInterceptor(buffer).toString$0(buffer);
};

$.LocalWindowEvents$ = function(_ptr) {
  return new $.LocalWindowEvents(_ptr);
};

$._HashMapImpl$ = function() {
  var t1 = new $._HashMapImpl(null, null, null, null, null);
  t1._HashMapImpl$0();
  return t1;
};

$._HashMapImpl__computeLoadLimit = function(capacity) {
  return $.tdiv(capacity * 3, 4);
};

$._HashMapImpl__nextProbe = function(currentProbe, numberOfProbes, length$) {
  return $.and($.add(currentProbe, numberOfProbes), $.sub(length$, 1));
};

$.List_List = function(length$) {
  return $.Primitives_newList(length$);
};

$.List_List$from = function(other) {
  var list, t1;
  list = $.List_List(null);
  for (t1 = $.getInterceptor$JSArray(other).iterator$0(other); t1.get$hasNext() === true;)
    list.push(t1.next$0());
  return list;
};

$.HashMap_HashMap = function() {
  return $._HashMapImpl$();
};

$.MediaElementEvents$ = function(_ptr) {
  return new $.MediaElementEvents(_ptr);
};

$.StackTrace$ = function(stack) {
  return new $.StackTrace(stack);
};

$.Map_Map = function() {
  return $._HashMapImpl$();
};

$.Maps_mapToString = function(m) {
  var result = $.StringBuffer_StringBuffer("");
  $.Maps__emitMap(m, result, $.List_List(null));
  return $.getInterceptor(result).toString$0(result);
};

$.Maps__emitMap = function(m, result, visiting) {
  var t1, t2, t3;
  t1 = {};
  t2 = $.getInterceptor$JSArray(visiting);
  t2.add$1(visiting, m);
  t3 = $.getInterceptor$JSArray(result);
  t3.add$1(result, "{");
  t1.first_1 = true;
  $.getInterceptor$JSArray(m).forEach$1(m, new $.Maps__emitMap_anon(visiting, t1, result));
  t3.add$1(result, "}");
  t2.removeLast$0(visiting);
};

$._HashSetIterator$ = function(set_) {
  var t1 = new $._HashSetIterator(set_._backingMap._keys, -1);
  t1._HashSetIterator$1(set_);
  return t1;
};

$.BodyElementEvents$ = function(_ptr) {
  return new $.BodyElementEvents(_ptr);
};

$._ElementCssClassSet$ = function(_element) {
  return new $._ElementCssClassSet(_element);
};

$.EventListenerList$ = function(_ptr, _type) {
  return new $.EventListenerList(_ptr, _type);
};

$._FrozenCssClassSet$ = function() {
  return new $._FrozenCssClassSet();
};

$.Lists_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var i;
  if ($.geB(startIndex, $.getInterceptor$JSStringJSArray(a).get$length(a)))
    return -1;
  if ($.ltB(startIndex, 0))
    startIndex = 0;
  for (i = startIndex; $.ltB(i, endIndex); i = $.add(i, 1))
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$.Lists_getRange$bailout = function(state0, a, start, length$, accumulator) {
  var end, i;
  if ($.ltB(length$, 0))
    throw $.$$throw($.ArgumentError$("length"));
  if ($.ltB(start, 0))
    throw $.$$throw($.RangeError$value(start));
  end = $.add(start, length$);
  if ($.gtB(end, $.getInterceptor$JSStringJSArray(a).get$length(a)))
    throw $.$$throw($.RangeError$value(end));
  for (i = start; $.ltB(i, end); i = $.add(i, 1))
    accumulator.push($.index(a, i));
  return accumulator;
};

$.Arrays_copy$bailout = function(state0, src, srcStart, dst, dstStart, count) {
  var i, j;
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1; i >= srcStart; --i, --j) {
      if (i < 0 || i >= src.length)
        throw $.ioore(i);
      $.indexSet(dst, j, src[i]);
    }
  else
    for (j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j) {
      if (i < 0 || i >= src.length)
        throw $.ioore(i);
      $.indexSet(dst, j, src[i]);
    }
};

$.Strings__toJsStringArray$bailout = function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      strings = env0;
      break;
    case 2:
      length$ = env1;
      strings = env0;
      break;
    case 3:
      length$ = env2;
      array = env1;
      strings = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      $.checkNull(strings);
      length$ = $.getInterceptor$JSStringJSArray(strings).get$length(strings);
    case 2:
      state0 = 0;
    case 3:
      var strings, length$, i, string, array;
      if (state0 === 0 && $.isJsArray(strings)) {
        for (i = 0; $.ltB(i, length$); ++i) {
          string = $.index(strings, i);
          if (!(typeof string === 'string'))
            throw $.$$throw($.ArgumentError$(string));
        }
        array = strings;
      } else
        switch (state0) {
          case 0:
            array = $.List_List(length$);
          case 3:
            state0 = 0;
            for (i = 0; $.ltB(i, length$); ++i) {
              string = $.index(strings, i);
              if (!(typeof string === 'string'))
                throw $.$$throw($.ArgumentError$(string));
              $.indexSet(array, i, string);
            }
        }
      return array;
  }
};

$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.toStringWrapper.call$0 = $.toStringWrapper;
$.toStringWrapper.$name = "toStringWrapper";
$._toString.call$1 = $._toString;
$._toString.$name = "_toString";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
Isolate.$finishClasses($$);
$$ = {};
$.CTC3 = new Isolate.$isolateProperties.JSInt();
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CTC7 = Isolate.makeConstantList([]);
$.CTC2 = new Isolate.$isolateProperties.JSString();
$.CTC = new Isolate.$isolateProperties.NullThrownError();
$.CTC6 = new Isolate.$isolateProperties.Object();
$.CTC8 = Isolate.makeConstantList(["body", "head", "caption", "td", "colgroup", "col", "tr", "tbody", "tfoot", "thead", "track"]);
$.CTC4 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CTC5 = new Isolate.$isolateProperties.ConstantMap(11, {body: "html", head: "html", caption: "table", td: "tr", colgroup: "table", col: "colgroup", tr: "tbody", tbody: "table", tfoot: "table", thead: "table", track: "audio"}, Isolate.$isolateProperties.CTC8);
$.CTC0 = new Isolate.$isolateProperties.JSArray();
$.CTC1 = new Isolate.$isolateProperties.JSNumber();
$.Primitives_hashCodeSeed = 0;
$._cachedBrowserPrefix = null;
$.Primitives_mirrorsEnabled = false;
$.Primitives_DOLLAR_CHAR_VALUE = 36;
$._getTypeNameOf = null;
$._HashMapImpl__DELETED_KEY = Isolate.$isolateProperties.CTC4;
$._HashMapImpl__INITIAL_CAPACITY = 8;
$.input = "data LinkedList<A> = Nil() | Cons(A head, LinkedList<A> tail)\n\ndata Map<K, V> = Fork(Map<K, V> left, Map<K,V> right)\n              | Leaf(K key, V value)\n\n// we can add methods to generated classes ...\n\nclass LinkedList {\n  List<A> toList() { var acc = []; _toList(acc); return acc; }\n  void _toList(List<A> acc);\n}\n\nclass Nil {\n  void _toList(List<A> acc) {}\n}\n\nclass Cons {\n  void _toList(List<A> acc) { acc.add(head); tail._toList(acc); }\n}\n\n// ... as well as override generated methods\n\nclass MapVisitor {\n  R visitFork(Fork<K, V> fork) {\n    fork.left.accept(this);\n    fork.right.accept(this);\n  }\n}\n";
$.finalFields = true;
$.isGetters = true;
$.MIRROR_OPT_IN_MESSAGE = "\nThis program is using an experimental feature called \"mirrors\".  As\ncurrently implemented, mirrors do not work with minification, and will\ncause spurious errors depending on how code was optimized.\n\nThe authors of this program are aware of these problems and have\ndecided the thrill of using an experimental feature is outweighing the\nrisks.  Furthermore, the authors of this program understand that\nlong-term, to fix the problems mentioned above, mirrors may have\nnegative impact on size and performance of Dart programs compiled to\nJavaScript.\n";
$.equality = true;
$.toStringMethod = true;
$.withMethod = true;
$.visitor = true;
$.matchMethod = true;
$.asGetters = true;
$._watchers = null;
$.getInterceptor$JSString = function(receiver) {
  if (typeof receiver == 'string') return $.JSString.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSStringJSArray = function(receiver) {
  if (typeof receiver == 'string') return $.JSString.prototype;
  if (receiver != null && receiver.constructor == Array) return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor = function(receiver) {
  if (typeof receiver == 'string') return $.JSString.prototype;
  if (receiver != null && receiver.constructor == Array) return $.JSArray.prototype;
  if (typeof receiver == 'number' && Math.floor(receiver) == receiver) return $.JSInt.prototype;
  if (typeof receiver == 'number') return $.JSDouble.prototype;
  if (receiver == null) return $.JSNull.prototype;
  if (typeof receiver == 'function') return $.JSFunction.prototype;
  if (typeof receiver == 'boolean') return $.JSBool.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSArray = function(receiver) {
  if (receiver != null && receiver.constructor == Array) return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
Isolate.$lazy($, '_START_TAG_REGEXP', '_START_TAG_REGEXP', 'get$_START_TAG_REGEXP', function() {
  return $.RegExp_RegExp("<(\\w+)", false, false);
});
Isolate.$lazy($, '_upper', '_upper', 'get$_upper', function() {
  return $.CTC2.toUpperCase$0("abcdefghijklmnopqrstuvwxyz");
});
Isolate.$lazy($, '_alpha', '_alpha', 'get$_alpha', function() {
  return "abcdefghijklmnopqrstuvwxyz" + $.S($.get$_upper());
});
Isolate.$lazy($, '_alphanum', '_alphanum', 'get$_alphanum', function() {
  return $.S($.get$_alpha()) + "1234567890";
});
Isolate.$lazy($, 'space', 'space', 'get$space', function() {
  return $.mod($.oneOf(" \t\n"), "space");
});
Isolate.$lazy($, 'fail', 'fail', 'get$fail', function() {
  return $.Parser$(new $.anon1());
});
Isolate.$lazy($, 'quoteRegExp', 'quoteRegExp', 'get$quoteRegExp', function() {
  return $.JSSyntaxRegExp$("[-[\\]{}()*+?.,\\\\^$|#\\s]", false, false);
});
Isolate.$lazy($, '_operators', '_operators', 'get$_operators', function() {
  return ["==", "~", "[]", "[]=", "*", "/", "%", "~/", "+", "<<", ">>>", ">>", ">=", ">", "<=", "<", "&", "^", "|"];
});
Isolate.$lazy($, 'eof', 'eof', 'get$eof', function() {
  return $.Parser$(new $.anon());
});
Isolate.$lazy($, 'moduleParser', 'moduleParser', 'get$moduleParser', function() {
  return $._AdtParsers$().get$module();
});
Isolate.$lazy($, '_reserved', '_reserved', 'get$_reserved', function() {
  return ["data", "class", "get", "set", "operator"];
});
Isolate.$lazy($, 'alphanum', 'alphanum', 'get$alphanum', function() {
  return $.oneOf($.get$_alphanum());
});
Isolate.$lazy($, 'letter', 'letter', 'get$letter', function() {
  return $.mod($.oneOf($.get$_alpha()), "letter");
});
Isolate.$lazy($, 'anyChar', 'anyChar', 'get$anyChar', function() {
  return $.pred(new $.anon0()).operator$mod$1("any character");
});
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, desc) {
  var fields = desc[''];
  var fields_array = fields ? fields.split(',') : [];
  for (var i = 0; i < fields_array.length; i++) {
    $.$generateAccessor(fields_array[i], desc);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var method in desc) {
    if (method) {        if (hasOwnProperty.call(desc, method)) {
        $.dynamicFunction(method)[cls] = desc[method];
      }
    }
  }
};

(function(table) {
  for (var key in table) {
    $.defineProperty(Object.prototype, key, table[key]);
  }
})({
 toString$0: function() { return $.toStringForNativeObject(this); },
 get$hashCode: function() { return $.hashCodeForNativeObject(this); },
 is$Collection: function() { return false; },
 is$JavaScriptIndexingBehavior: function() { return false; },
 is$Text: function() { return false; },
 is$Map: function() { return false; },
 is$List: function() { return false; },
 is$Element: function() { return false; }
});

$.$defineNativeClass('HTMLAnchorElement', {"":"name?,type?",
 toString$0: function() {
  return this.toString();
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLAppletElement', {"":"name?",
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLAreaElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('Attr', {"":"name?,value="
});

$.$defineNativeClass('HTMLBRElement', {
 clear$0: function() {
  return this.clear.call$0();
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLBaseElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLBaseFontElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLBodyElement', {
 get$on: function() {
  return $.BodyElementEvents$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLButtonElement', {"":"name?,type?,value=",
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLCanvasElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('CharacterData', {"":"length?",
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('HTMLContentElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('CSSStyleDeclaration', {"":"length?",
 _getPropertyValue$1: function(propertyName) {
  return this.getPropertyValue(propertyName);
},
 getPropertyValue$1: function(propertyName) {
  var propValue = this._getPropertyValue$1(propertyName);
  return !(propValue == null) ? propValue : "";
},
 get$clear: function() {
  return this.getPropertyValue$1("clear");
},
 clear$0: function() {
  return this.get$clear().call$0();
},
 get$filter: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + "filter");
},
 filter$1: function(arg0) {
  return this.get$filter().call$1(arg0);
},
 get$position: function() {
  return this.getPropertyValue$1("position");
}
});

$.$defineNativeClass('HTMLDListElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLDataListElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLDetailsElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLDirectoryElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLDivElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('Document', {
 get$$$dom_body: function() { return this.body; },
 get$on: function() {
  return $.DocumentEvents$(this);
},
 $dom_getElementById$1: function(elementId) {
  return this.getElementById(elementId);
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 query$1: function(selectors) {
  if ($.RegExp_RegExp("^#[_a-zA-Z]\\w*$", false, false).hasMatch$1(selectors) === true)
    return this.$dom_getElementById$1($.CTC2.substring$1(selectors, 1));
  return this.$dom_querySelector$1(selectors);
}
});

$.$defineNativeClass('DocumentFragment', {
 get$children: function() {
  if (this._children == null)
    this._children = $.FilteredElementList$(this);
  return this._children;
},
 query$1: function(selectors) {
  return this.$dom_querySelector$1(selectors);
},
 set$innerHtml: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$innerHtml')) {
    var t1, e, nodes;
    t1 = this.get$nodes();
    $.getInterceptor$JSArray(t1).clear$0(t1);
    e = $.Element_Element$tag("div");
    e.set$innerHtml(value);
    nodes = $.List_List$from(e.get$nodes());
    t1 = this.get$nodes();
    $.getInterceptor$JSArray(t1).addAll$1(t1, nodes);
  } else {
    return Object.prototype.set$innerHtml.call(this, value);
  }
},
 get$parent: function() {
  return;
},
 get$classes: function() {
  return $._FrozenCssClassSet$();
},
 get$on: function() {
  return $.ElementEvents$(this);
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
}
});

$.$defineNativeClass('DocumentType', {"":"name?",
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('DOMError', {"":"name?"
});

$.$defineNativeClass('DOMException', {"":"name?",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Element', {
 get$$$dom_children: function() { return this.children; },
 set$innerHtml: function(v) { this.innerHTML = v; },
 get$$$dom_className: function() { return this.className; },
 set$$$dom_className: function(v) { this.className = v; },
 get$$$dom_firstElementChild: function() { return this.firstElementChild; },
 get$$$dom_lastElementChild: function() { return this.lastElementChild; },
 get$attributes: function() {
  return $._ElementAttributeMap$(this);
},
 get$children: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$children')) {
    return $._ChildrenElementList$_wrap(this);
  } else {
    return Object.prototype.get$children.call(this);
  }
},
 set$children: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$children')) {
    var copy, children, t1;
    copy = $.List_List$from(value);
    children = this.get$children();
    t1 = $.getInterceptor$JSArray(children);
    t1.clear$0(children);
    t1.addAll$1(children, copy);
  } else {
    return Object.prototype.set$children.call(this, value);
  }
},
 query$1: function(selectors) {
  return this.$dom_querySelector$1(selectors);
},
 get$classes: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$classes')) {
    return $._ElementCssClassSet$(this);
  } else {
    return Object.prototype.get$classes.call(this);
  }
},
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
    return $.ElementEvents$(this);
  } else {
    return Object.prototype.get$on.call(this);
  }
},
 $dom_getAttribute$1: function(name) {
  return this.getAttribute(name);
},
 $dom_hasAttribute$1: function(name) {
  return this.hasAttribute(name);
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 $dom_removeAttribute$1: function(name) {
  return this.removeAttribute(name);
},
 $dom_setAttribute$2: function(name, value) {
  return this.setAttribute(name,value);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLEmbedElement', {"":"name?,type?",
 is$Element: function() { return true; }
});

$.$defineNativeClass('Event', {"":"type?"
});

$.$defineNativeClass('EventException', {"":"name?",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('EventTarget', {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
    return $.Events$(this);
  } else {
    return Object.prototype.get$on.call(this);
  }
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_addEventListener$3')) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  } else {
    return Object.prototype.$dom_addEventListener$3.call(this, type, listener, useCapture);
  }
}
});

$.$defineNativeClass('HTMLFieldSetElement', {"":"name?,type?",
 is$Element: function() { return true; }
});

$.$defineNativeClass('FileException', {"":"name?",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLFontElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLFormElement', {"":"length?,name?",
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLFrameElement', {"":"name?",
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLFrameSetElement', {
 get$on: function() {
  return $.FrameSetElementEvents$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLHRElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLHeadElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLHeadingElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLCollection', {
 get$length: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$length')) {
    return this.length;
  } else {
    return Object.prototype.get$length.call(this);
  }
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$length')) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  } else {
    return Object.prototype.set$length.call(this, value);
  }
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLDocument', {
 get$body: function() {
  return $.document().get$$$dom_body();
}
});

$.$defineNativeClass('HTMLHtmlElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLOptionsCollection', {
 get$length: function() {
  return this.length;
},
 set$length: function(value) {
  this.length = value;
}
});

$.$defineNativeClass('XMLHttpRequestException', {"":"name?",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XMLHttpRequestProgressEvent', {"":"position?"
});

$.$defineNativeClass('HTMLIFrameElement', {"":"name?",
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLImageElement', {"":"name?",
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLInputElement', {"":"checked=,name?,pattern?,type?,value=",
 get$on: function() {
  return $.InputElementEvents$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLKeygenElement', {"":"name?,type?",
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLIElement', {"":"type?,value=",
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLabelElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLegendElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLinkElement', {"":"type?",
 is$Element: function() { return true; }
});

$.$defineNativeClass('DOMWindow', {"":"name?,navigator?",
 get$on: function() {
  return $.LocalWindowEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMapElement', {"":"name?",
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLMarqueeElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLMediaElement', {
 get$on: function() {
  return $.MediaElementEvents$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLMenuElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLMetaElement', {"":"name?",
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLMeterElement', {"":"value=",
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLModElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('MutationEvent', {"":"newValue?"
});

$.$defineNativeClass('NamedNodeMap', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Navigator', {"":"userAgent?"
});

$.$defineNativeClass('Node', {
 get$$$dom_attributes: function() { return this.attributes; },
 get$$$dom_childNodes: function() { return this.childNodes; },
 get$$$dom_localName: function() { return this.localName; },
 get$$$dom_namespaceUri: function() { return this.namespaceURI; },
 get$parent: function() { return this.parentNode; },
 get$text: function() { return this.textContent; },
 set$text: function(v) { this.textContent = v; },
 get$nodes: function() {
  return $._ChildNodeListLazy$(this);
},
 remove$0: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('remove$0')) {
    if (!(this.get$parent() == null))
      this.get$parent().$dom_removeChild$1(this);
  } else {
    return Object.prototype.remove$0.call(this);
  }
},
 replaceWith$1: function(otherNode, exception) {
  var parent$;
  try {
    parent$ = this.get$parent();
    parent$.$dom_replaceChild$2(otherNode, this);
  } catch (exception) {
    $.unwrapException(exception);
  }

  return this;
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_appendChild$1: function(newChild) {
  return this.appendChild(newChild);
},
 contains$1: function(other) {
  return this.contains(other);
},
 $dom_removeChild$1: function(oldChild) {
  return this.removeChild(oldChild);
},
 $dom_replaceChild$2: function(newChild, oldChild) {
  return this.replaceChild(newChild,oldChild);
}
});

$.$defineNativeClass('NodeList', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLOListElement', {"":"type?",
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLObjectElement', {"":"name?,type?",
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLOptGroupElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLOptionElement', {"":"value=",
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLOutputElement', {"":"name?,type?,value=",
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLParagraphElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLParamElement', {"":"name?,type?,value=",
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLPreElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLProgressElement', {"":"position?,value=",
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLQuoteElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('RadioNodeList', {"":"value="
});

$.$defineNativeClass('RangeException', {"":"name?",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLScriptElement', {"":"type?",
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLSelectElement', {"":"length=,name?,type?,value=",
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLShadowElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('ShadowRoot', {
 set$innerHtml: function(v) { this.innerHTML = v; }
});

$.$defineNativeClass('HTMLSourceElement', {"":"type?",
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLSpanElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('Storage', {
 containsKey$1: function(key) {
  return !(this.$dom_getItem$1(key) == null);
},
 operator$index$1: function(key) {
  return this.$dom_getItem$1(key);
},
 operator$indexSet$2: function(key, value) {
  this.$dom_setItem$2(key, value);
},
 clear$0: function() {
  return this.$dom_clear$0();
},
 forEach$1: function(f) {
  var i, key;
  for (i = 0; true; ++i) {
    key = this.$dom_key$1(i);
    if (key == null)
      return;
    f.call$2(key, this.operator$index$1(key));
  }
},
 get$length: function() {
  return this.length;
},
 get$isEmpty: function() {
  return this.$dom_key$1(0) == null;
},
 $dom_clear$0: function() {
  return this.clear();
},
 $dom_getItem$1: function(key) {
  return this.getItem(key);
},
 $dom_key$1: function(index) {
  return this.key(index);
},
 $dom_setItem$2: function(key, data) {
  return this.setItem(key,data);
},
 is$Map: function() { return true; }
});

$.$defineNativeClass('StorageEvent', {"":"key?,newValue?"
});

$.$defineNativeClass('HTMLStyleElement', {"":"type?",
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableCaptionElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableCellElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableColElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableRowElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableSectionElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('Text', {
 is$Text: function() { return true; }
});

$.$defineNativeClass('HTMLTextAreaElement', {"":"name?,type?,value=",
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTitleElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTrackElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLUListElement', {"":"type?",
 is$Element: function() { return true; }
});

$.$defineNativeClass('Uint8Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLUnknownElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('XPathException', {"":"name?",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('IDBDatabaseException', {"":"name?",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('SVGComponentTransferFunctionElement', {"":"type?"
});

$.$defineNativeClass('SVGFEColorMatrixElement', {"":"type?"
});

$.$defineNativeClass('SVGFETurbulenceElement', {"":"type?"
});

$.$defineNativeClass('SVGScriptElement', {"":"type?"
});

$.$defineNativeClass('SVGStyleElement', {"":"type?"
});

$.$defineNativeClass('SVGElement', {
 get$classes: function() {
  if (this._cssClassSet == null)
    this._cssClassSet = $._AttributeClassSet$(this);
  return this._cssClassSet;
},
 get$children: function() {
  return $.FilteredElementList$(this);
},
 set$children: function(value) {
  var children, t1;
  children = this.get$children();
  t1 = $.getInterceptor$JSArray(children);
  t1.clear$0(children);
  t1.addAll$1(children, value);
},
 set$innerHtml: function(svg) {
  var container = $.Element_Element$tag("div");
  container.set$innerHtml("<svg version=\"1.1\">" + $.S(svg) + "</svg>");
  this.set$children($.index(container.get$children(), 0).get$children());
},
 get$$$dom_children: function() {
  throw $.$$throw($.UnsupportedError$("Cannot get dom_children on SVG."));
}
});

$.$defineNativeClass('SVGException', {"":"name?",
 toString$0: function() {
  return this.toString();
}
});

// 107 dynamic classes.
// 233 classes
// 21 !leaf
(function() {
  var v0_ComponentTransferFunctionElement = 'SVGComponentTransferFunctionElement|SVGFEFuncBElement|SVGFEFuncGElement|SVGFEFuncRElement|SVGFEFuncAElement', v1_MediaElement = 'HTMLMediaElement|HTMLAudioElement|HTMLVideoElement', v2_SvgElement = [v0_ComponentTransferFunctionElement, 'SVGElement|SVGAElement|SVGAltGlyphDefElement|SVGTextContentElement|SVGTextPositioningElement|SVGAltGlyphElement|SVGTSpanElement|SVGTRefElement|SVGTextElement|SVGTextPathElement|SVGAltGlyphItemElement|SVGAnimationElement|SVGAnimateColorElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGSetElement|SVGCircleElement|SVGClipPathElement|SVGCursorElement|SVGDefsElement|SVGDescElement|SVGEllipseElement|SVGFEBlendElement|SVGFEColorMatrixElement|SVGFEComponentTransferElement|SVGFEConvolveMatrixElement|SVGFECompositeElement|SVGFEDropShadowElement|SVGFEDisplacementMapElement|SVGFEDistantLightElement|SVGFEFloodElement|SVGFEMergeElement|SVGFEGaussianBlurElement|SVGFEDiffuseLightingElement|SVGFEMorphologyElement|SVGFEOffsetElement|SVGFEMergeNodeElement|SVGFETileElement|SVGFETurbulenceElement|SVGFESpotLightElement|SVGFontFaceElement|SVGFEImageElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGForeignObjectElement|SVGGlyphElement|SVGGlyphRefElement|SVGGradientElement|SVGLinearGradientElement|SVGRadialGradientElement|SVGHKernElement|SVGLineElement|SVGFontFaceFormatElement|SVGFilterElement|SVGFEPointLightElement|SVGMaskElement|SVGGElement|SVGMarkerElement|SVGMissingGlyphElement|SVGMPathElement|SVGImageElement|SVGPathElement|SVGFESpecularLightingElement|SVGMetadataElement|SVGFontElement|SVGPatternElement|SVGPolygonElement|SVGPolylineElement|SVGRectElement|SVGStopElement|SVGScriptElement|SVGStyleElement|SVGSymbolElement|SVGSwitchElement|SVGSVGElement|SVGVKernElement|SVGViewElement|SVGUseElement|SVGTitleElement'].join('|'), v3_Text = 'Text|CDATASection', v4_Element = [v1_MediaElement, v2_SvgElement, 'Element|HTMLElement|HTMLAnchorElement|HTMLAppletElement|HTMLAreaElement|HTMLBRElement|HTMLBaseElement|HTMLBaseFontElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDirectoryElement|HTMLDivElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFontElement|HTMLFormElement|HTMLFrameElement|HTMLFrameSetElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement|HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMapElement|HTMLMarqueeElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement'].join('|'), v5_CharacterData = [v3_Text, 'CharacterData|Comment'].join('|'), v6_Document = 'Document|HTMLDocument|SVGDocument', v7_DocumentFragment = 'DocumentFragment|ShadowRoot', v8_Node = [v4_Element, v5_CharacterData, v6_Document, v7_DocumentFragment, 'Node|Attr|DocumentType|EntityReference|Notation|ProcessingInstruction'].join('|');
  $.dynamicSetMetadata([['HTMLCollection', 'HTMLCollection|HTMLOptionsCollection'], ['SVGComponentTransferFunctionElement', v0_ComponentTransferFunctionElement], ['SVGElement', v2_SvgElement], ['HTMLMediaElement', v1_MediaElement], ['Element', v4_Element], ['Text', v3_Text], ['CharacterData', v5_CharacterData], ['Document', v6_Document], ['DocumentFragment', v7_DocumentFragment], ['Node', v8_Node], ['NodeList', 'NodeList|RadioNodeList'], ['Uint8Array', 'Uint8Array|Uint8ClampedArray'], ['Event', 'Event|IDBVersionChangeEvent|IDBVersionChangeEvent|WebKitAnimationEvent|BeforeLoadEvent|CloseEvent|UIEvent|CompositionEvent|SVGZoomEvent|KeyboardEvent|MouseEvent|WheelEvent|TextEvent|TouchEvent|CustomEvent|DeviceMotionEvent|DeviceOrientationEvent|ErrorEvent|HashChangeEvent|MediaStreamEvent|MediaStreamTrackEvent|MediaKeyEvent|MessageEvent|AudioProcessingEvent|MutationEvent|OfflineAudioCompletionEvent|OverflowEvent|PageTransitionEvent|PopStateEvent|ProgressEvent|XMLHttpRequestProgressEvent|RTCDataChannelEvent|RTCIceCandidateEvent|SpeechInputEvent|SpeechRecognitionError|SpeechRecognitionEvent|StorageEvent|TrackEvent|WebKitTransitionEvent|WebGLContextEvent'], ['EventTarget', [v8_Node, 'EventTarget|DOMWindow'].join('|')]]);
})();


//
// BEGIN invoke [main].
//
if (typeof document != 'undefined' && document.readyState != 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner == 'function') {
        dartMainRunner(function() { $.main0(); });
      } else {
        $.main0();
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner == 'function') {
    dartMainRunner(function() { $.main0(); });
  } else {
    $.main0();
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
function generateAccessor(field, prototype) {
  var len = field.length;
  var lastChar = field[len - 1];
  var needsGetter = lastChar == '?' || lastChar == '=';
  var needsSetter = lastChar == '!' || lastChar == '=';
  if (needsGetter || needsSetter) field = field.substring(0, len - 1);
  if (needsGetter) {
    var getterString = "return this." + field + ";";
      prototype["get$" + field] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + field] = new Function("v", setterString);
    }
    return field;
  };
Isolate.$isolateProperties.$generateAccessor = generateAccessor
Isolate.$defineClass = function(cls, fields, prototype) {
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateAccessor(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  constructor.builtin$cls = cls;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== "undefined") supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var cls in collectedClasses) {
    if (hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      var s = desc[''].split(';'), supr = s[0];
      var fields = s[1] == '' ? [] : s[1].split(',');
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, fields, desc);
      if (supr) Isolate.$pendingClasses[cls] = supr;
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (hasOwnProperty.call(finishedClasses, cls)) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      for (var member in prototype) {
        if (!member) continue;          if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
  var getter = new Function("{ return $." + fieldName + ";}");
  var sentinelUndefined = {};
  var sentinelInProgress = {};
  prototype[fieldName] = sentinelUndefined;
  prototype[getterName] = function() {
    var result = $[fieldName];
    try {
      if (result === sentinelUndefined) {
        $[fieldName] = sentinelInProgress;
        try {
          result = $[fieldName] = lazyValue();
        } catch (e) {
          if ($[fieldName] === sentinelInProgress) {
            $[fieldName] = null;
          }
          throw e;
        }
      } else if (result === sentinelInProgress) {
        $.throwCyclicInit(staticName);
      }
      return result;
    } finally {
      $[getterName] = getter;
    }
  };
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}

//@ sourceMappingURL=main.html_bootstrap.dart.js.map